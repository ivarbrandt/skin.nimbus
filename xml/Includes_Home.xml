<?xml version="1.0" encoding="UTF-8"?>
<includes>

	<include name="WidgetGroupListCommon">
		<orientation>vertical</orientation>
		<height>33000</height>
		<itemgap>-100</itemgap>
		<onup>20000</onup>
		<ondown>20001</ondown>
		<usecontrolcoords>true</usecontrolcoords>
	</include>

	<include name="CategoryLabel">
		<param name="visible">true</param>
		<param name="item_treshold">0</param>
		<param name="label_focus">$VAR[FlixCrumbsVar]</param>
		<definition>
			<control type="group" id="$PARAM[list_id]665">
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<left>50</left>
				<top>80</top>
				<height>40</height>
				<width>1815</width>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<visible>$PARAM[visible]</visible>
				<control type="label">
					<top>17</top>
					<!-- <label>$INFO[Window(Home).Property(nimbus_saved_list_id)]</label> -->
					<label>[LIGHT]$VAR[HomescreenFlixCrumbs]$VAR[SearchFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus][/LIGHT]</label>
					<font>font23_title</font>
					<textcolor>$VAR[MenuSelectorColor]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<visible>Skin.HasSetting(Disable.WidgetNavigationArrows) + Control.HasFocus($PARAM[list_id])</visible>
					<animation effect="fade" start="0" end="100" time="300">Visible</animation>
				</control>
				<control type="label">
					<left>33</left>
					<top>17</top>
					<label>[LIGHT]$VAR[HomescreenFlixCrumbs]$VAR[SearchFlixCrumbs][COLOR unfocused_text]$PARAM[label][/COLOR]$PARAM[label_focus][/LIGHT]</label>
					<font>font23_title</font>
					<textcolor>$VAR[MenuSelectorColor]</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<visible>!Skin.HasSetting(Disable.WidgetNavigationArrows) + Control.HasFocus($PARAM[list_id])</visible>
					<animation effect="fade" start="0" end="100" time="300">Visible</animation>
				</control>
				<control type="label">
					<top>22</top>
					<label>$PARAM[label]</label>
					<font>font23</font>
					<textcolor>unfocused_text</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<scroll>true</scroll>
					<scrollspeed>100</scrollspeed>
					<visible>!Control.HasFocus($PARAM[list_id])</visible>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetListPoster">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="240"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>102</top>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<movement>7</movement>
				<animation condition="Window.IsVisible(1121) + Container($PARAM[list_id]).IsUpdating" reversible="true" pulse="true">
					<effect type="fade" start="100" end="80" time="700" tween="sine" easing="inout" />
					<effect type="fadediffuse" start="FFE9E9E9" end="FF777777" time="700" />
				</animation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating | String.IsEqual(Window(Home).Property(nimbus.search.refreshing),true)</visible>
				<right>0</right>
				<height>346</height>
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="230.5" height="393" >
					<control type="group">
						<left>33</left>
						<top>15</top>
						<include content="FlixWidgetMovieLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="230.5" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>33</left>
						<top>15</top>
						<include content="FlixWidgetMovieLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>HomeTrailerControl</include>
						<include>ClearLandscapeProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<!-- <include name="WidgetListLandscape">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="240"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>107</top>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<movement>2</movement>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<right>0</right>
				<height>346</height>
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="613" height="393" >
					<control type="group">
						<left>35</left>
						<top>15</top>
						<include content="FlixScapeMovieLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="613" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>35</left>
						<top>15</top>
						<include content="FlixScapeMovieLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>HomeTrailerControl</include>
						<include>SetLandscapeArtworkProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include> -->

	<include name="WidgetListLandscape">
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="posy" value="240"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>102</top>
				<onright>$PARAM[list_id]</onright>
				<orientation>horizontal</orientation>
				<movement>3</movement>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<right>0</right>
				<height>346</height>
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<!-- <animation effect="fade" start="0" end="100" time="500" tween="sine" reversible="true" condition="Control.HasFocus($PARAM[list_id]) | !ControlGroup(2000).HasFocus">Conditional</animation> -->
				<onclick condition="$PARAM[onclick_condition]">$PARAM[onclick_action]</onclick>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<itemlayout width="459.5" height="393" >
					<control type="group">
						<left>35</left>
						<top>15</top>
						<include content="FlixScapeWidgetMovieLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="459.5" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>35</left>
						<top>15</top>
						<include content="FlixScapeWidgetMovieLayout">
							<param name="focused" value="true" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
						<include>HomeTrailerControl</include>
						<include>SetLandscapeArtworkProperties</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="WidgetListSquare">
		<param name="visible">true</param>
		<param name="sub_label">$INFO[ListItem.Label]</param>
		<param name="fallback_icon">DefaultFolder.png</param>
		<param name="onclick_condition">false</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="140"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>102</top>
				<right>0</right>
				<height>346</height>
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<onright>$PARAM[list_id]</onright>
				<movement>6</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<!-- <visible>$PARAM[visible]</visible> -->
				<animation condition="Window.IsVisible(1121) + Container($PARAM[list_id]).IsUpdating" reversible="true" pulse="true">
					<effect type="fade" start="100" end="80" time="700" tween="sine" easing="inout" />
					<effect type="fadediffuse" start="FFE9E9E9" end="FF777777" time="700" />
				</animation>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating | String.IsEqual(Window(Home).Property(nimbus.search.refreshing),true)</visible>
				<itemlayout width="262" height="393">
					<control type="group">
						<top>26</top>
						<left>56</left>
						<include content="FlixSquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="262" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<top>26</top>
						<left>56</left>
						<include content="FlixSquareLayout">
							<param name="main_label" value="$PARAM[main_label]" />
							<param name="single_label" value="$PARAM[single_label]" />
							<param name="sub_label" value="$PARAM[sub_label]" />
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
					<include>ClearLandscapeProperties</include>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
				<include>$PARAM[content_include]</include>
			</control>
		</definition>
	</include>

	<include name="WidgetListCategory">
		<!-- <param name="item_limit">30</param> -->
		<!-- <param name="icon_height">230</param> -->
		<param name="icon">$PARAM[icon]</param>
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="140"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<top>102</top>
				<right>0</right>
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<height>346</height>
				<onright>$PARAM[list_id]</onright>
				<movement>6</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="262" height="393">
					<control type="group">
						<include content="WidgetListCategoryLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="262" height="393" infoupdate="300">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<include content="WidgetListCategoryLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
						<include>HomeTrailerControl</include>
						<include>SetLandscapeArtworkProperties</include>
					</control>
				</focusedlayout>
				<content target="$PARAM[widget_target]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="ImageWidget">
		<param name="visible">true</param>
		<param name="visible_1">true</param>
		<param name="visible_2">true</param>
		<param name="visible_3">true</param>
		<param name="button2_label">$LOCALIZE[31116]</param>
		<param name="button3_label">Return to the home screen</param>
		<param name="button2_onclick">true</param>
		<definition>
			<control type="group" id="$PARAM[button_id]889">
				<visible>$PARAM[visible]</visible>
				<control type="grouplist" id="$PARAM[button_id]577">
					<orientation>vertical</orientation>
					<top>90</top>
					<bottom>0</bottom>
					<left>$PARAM[left]</left>
					<right>50</right>
					<align>center</align>
					<control type="textbox">
						<width>100%</width>
						<height min="110" max="300">auto</height>
						<label>$PARAM[text_label]</label>
						<textcolor>unfocused_text</textcolor>
						<align>center</align>
						<font>font14</font>
					</control>
					<control type="grouplist" id="$PARAM[button_id]567">
						<itemgap>30</itemgap>
						<width>100%</width>
						<onup>9000</onup>
						<ondown>9000</ondown>
						<orientation>horizontal</orientation>
						<align>center</align>
						<onleft>9000</onleft>
						<control type="button" id="$PARAM[button_id]">
							<width>auto</width>
							<height>75</height>
							<label>$PARAM[button_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button_onclick]</onclick>
							<align>center</align>
							<texturefocus border="40" colordiffuse="$VAR[FocusColorTheme]">buttons/dfo.png</texturefocus>
							<texturenofocus border="40" colordiffuse="FF3d3d3d">buttons/dnfo.png</texturenofocus>
							<focusedcolor>$VAR[FocusedTextColorVar]</focusedcolor>
							<visible>$PARAM[visible_1]</visible>
						</control>
						<control type="button" id="$PARAM[button_id]568">
							<width>auto</width>
							<height>75</height>
							<label>$PARAM[button2_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button2_onclick]</onclick>
							<onclick>SetFocus(9000)</onclick>
							<align>center</align>
							<texturefocus border="40" colordiffuse="$VAR[FocusColorTheme]">buttons/dfo.png</texturefocus>
							<texturenofocus border="40" colordiffuse="FF3d3d3d" >buttons/dnfo.png</texturenofocus>
							<focusedcolor>$VAR[FocusedTextColorVar]</focusedcolor>
							<visible>$PARAM[visible_2] + Window.IsActive(home)</visible>
						</control>
						<control type="button" id="$PARAM[button_id]569">
							<width>auto</width>
							<height>75</height>
							<label>$PARAM[button3_label]</label>
							<textoffsetx>40</textoffsetx>
							<onclick>$PARAM[button3_onclick]</onclick>
							<onclick>SetFocus(9000)</onclick>
							<align>center</align>
							<texturefocus border="40" colordiffuse="$VAR[FocusColorTheme]">buttons/dfo.png</texturefocus>
							<texturenofocus border="40" colordiffuse="FF3d3d3d" >buttons/dnfo.png</texturenofocus>
							<focusedcolor>$VAR[FocusedTextColorVar]</focusedcolor>
							<visible>$PARAM[visible_3] + Window.IsActive(1121)</visible>
						</control>
					</control>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetListPVR">
		<param name="item_treshold">0</param>
		<param name="item_limit">15</param>
		<!-- <param name="icon_height">230</param> -->
		<param name="icon">$PARAM[icon]</param>
		<param name="info_update">300</param>
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="item_treshold" value="$PARAM[item_treshold]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="140"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<top>102</top>
				<right>0</right>
				<height>346</height>
				<onright>$PARAM[list_id]</onright>
				<movement>3</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,$PARAM[item_treshold]) | [Container($PARAM[list_id]).IsUpdating + Integer.IsEqual(Container($PARAM[list_id]).NumItems,0)]</visible>
				<itemlayout width="460.3" height="393">
					<control type="group">
						<left>-5</left>
						<!-- <top>55</top> -->
						<include content="WidgetListPVRLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="460.3" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<left>-5</left>
						<!-- <top>55</top> -->
						<include content="WidgetListPVRLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]" target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="WeatherWidget">
		<param name="visible">true</param>
		<definition>
			<include content="CategoryLabel">
				<param name="label">$PARAM[widget_header]</param>
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
			</include>
			<include content="BusyListSpinner">
				<param name="list_id" value="$PARAM[list_id]"/>
				<param name="visible" value="$PARAM[visible]"/>
				<param name="posy" value="140"/>
			</include>
			<control type="fixedlist" id="$PARAM[list_id]">
				<include content="WidgetVisibilityAnimations">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<top>102</top>
				<right>0</right>
				<height>346</height>
				<onright>$PARAM[list_id]</onright>
				<movement>6</movement>
				<include content="WidgetListCommon">
					<param name="list_id" value="$PARAM[list_id]"/>
				</include>
				<visible>$PARAM[visible]</visible>
				<onfocus>Control.Move($PARAM[list_id],-$INFO[Container($PARAM[list_id]).Position])</onfocus>
				<onfocus>Control.Move($PARAM[list_id],$INFO[Window(home).Property(listposition)])</onfocus>
				<visible>$PARAM[visible]</visible>
				<visible>Integer.IsGreater(Container($PARAM[list_id]).NumItems,0) | Container($PARAM[list_id]).IsUpdating</visible>
				<itemlayout width="262" height="393">
					<control type="group">
						<include content="WeatherWidgetLayout">
							<param name="list_id" value="$PARAM[list_id]" />
						</include>
					</control>
				</itemlayout>
				<focusedlayout width="262" height="393" infoupdate="30">
					<control type="group">
						<depth>DepthContentPopout</depth>
						<include content="WeatherWidgetLayout">
							<param name="list_id" value="$PARAM[list_id]" />
							<param name="focused" value="true" />
						</include>
					</control>
				</focusedlayout>
				<include>$PARAM[content_include]</include>
				<content target="$PARAM[widget_target]" limit="$PARAM[item_limit]">$PARAM[content_path]</content>
			</control>
		</definition>
	</include>

	<include name="HourlyItems">
		<content>
			<item>
				<icon>resource://resource.images.weathericons.default/na.png</icon>
				<onclick>noop</onclick>
				<visible>String.IsEmpty(Window(weather).Property(Hourly.IsFetched))</visible>
			</item>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="7" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="8" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="9" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="10" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="11" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="12" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="13" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="14" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="15" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="16" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="17" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="18" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="19" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="20" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="21" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="22" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="23" />
			</include>
			<include content="WeatherHourlyItem">
				<param name="item_index" value="24" />
			</include>
		</content>
	</include>

	<include name="DailyItems">
		<content>
			<item>
				<icon>resource://resource.images.weathericons.default/na.png</icon>
				<onclick>noop</onclick>
				<visible>!Weather.IsFetched</visible>
			</item>
			<include content="WeatherDayItem">
				<param name="item_index" value="0" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherDayItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="1" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="2" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="3" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="4" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="5" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="6" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="7" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="8" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="9" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="10" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="11" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="12" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="13" />
			</include>
			<include content="WeatherDailyItem">
				<param name="item_index" value="14" />
			</include>
		</content>
	</include>

	<include name="WeatherHourlyItem">
			<item>
				<label>[COLOR unfocused_text]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Time)][/COLOR]</label>
				<label2>[COLOR unfocused_text][B]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]  [COLOR unfocused_text]•[/B][/COLOR]  $INFO[Window(weather).Property(Hourly.$PARAM[item_index].Precipitation)][/COLOR]</label2>
				<property name="Temperature">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Temperature)]</property>
				<property name="Outlook">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Outlook)]</property>
				<property name="Cloudiness">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].Cloudiness)]</property>
				<property name="ShortDate">[COLOR darkgrey]$INFO[Window(weather).Property(Hourly.$PARAM[item_index].ShortDate)][/COLOR]</property>
				<property name="FanartCode">$INFO[Window(weather).Property(Hourly.$PARAM[item_index].FanartCode)]</property>
				<thumb>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Hourly.$PARAM[item_index].OutlookIcon)]</thumb>
				<onclick>noop</onclick>
				<visible>!String.IsEmpty(Window(weather).Property(Hourly.$PARAM[item_index].Outlook))</visible>
			</item>
	</include>

	<include name="WeatherDailyItem">
		<item>
			<label>$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</label>
			<label2>[COLOR FFFF4C4C][B]$INFO[Window(weather).Property(Daily.$PARAM[item_index].HighTemperature)][/COLOR]  [COLOR unfocused_text]•[/COLOR]  [COLOR FF4C8CFF]$INFO[Window(weather).Property(Daily.$PARAM[item_index].LowTemperature)][/B][/COLOR]</label2>
			<property name="LongDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].LongDay)]</property>
			<property name="TempDay">$INFO[Window(weather).Property(Daily.$PARAM[item_index].TempDay)]</property>
			<property name="Cloudiness">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Cloudiness)]</property>
			<property name="Outlook">$INFO[Window(weather).Property(Daily.$PARAM[item_index].Outlook)]</property>
			<property name="ShortDate">[COLOR darkgrey]$INFO[Window(weather).Property(Daily.$PARAM[item_index].ShortDate)][/COLOR]</property>
			<property name="FanartCode">$INFO[Window(weather).Property(Daily.$PARAM[item_index].FanartCode)]</property>
			<thumb>resource://resource.images.weathericons.default/$INFO[Window(weather).Property(Daily.$PARAM[item_index].OutlookIcon)]</thumb>
			<onclick>noop</onclick>
			<visible>!String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + !String.IsEmpty(Window(weather).Property(Daily.$PARAM[item_index].Outlook))</visible>
		</item>
	</include>

	<include name="WeatherDayItem">
		<item>
			<label>$INFO[Window(weather).Property(Day$PARAM[item_index].Title)]</label>
			<label2>[COLOR blue]$INFO[Window(weather).Property(Day$PARAM[item_index].LowTemp)]$INFO[System.TemperatureUnits][/COLOR] ∙ [COLOR red]$INFO[Window(weather).Property(Day$PARAM[item_index].HighTemp)]$INFO[System.TemperatureUnits][/COLOR]</label2>
			<property name="LongDay"></property>
			<property name="TempDay"></property>
			<property name="Cloudiness"></property>
			<property name="Outlook"></property>
			<property name="ShortDate"></property>
			<property name="FanartCode">$INFO[Window(weather).Property(Day$PARAM[item_index].FanartCode)]</property>
			<thumb>$INFO[Window(weather).Property(Day$PARAM[item_index].OutlookIcon)]</thumb>
			<onclick>noop</onclick>
			<visible>String.IsEmpty(Window(weather).Property(Daily.IsFetched)) + !String.IsEmpty(Window(weather).Property(Day$PARAM[item_index].Outlook))</visible>
		</item>
	</include>

	<include name="WeatherMapItem">
		<control type="group" id="700$PARAM[item_id]">
			<height>1110</height>
			<visible>Weather.IsFetched + !String.IsEmpty(Window(weather).Property(Map.$PARAM[item_id].Area)) + !String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
			<centerleft>50%</centerleft>
			<width>1920</width>
			<control type="button" id="700$PARAM[item_id]0">
				<left>50</left>
				<top>100</top>
				<width>1820</width>
				<height>920</height>
				<onup>$PARAM[onup_id]</onup>
				<ondown>$PARAM[ondown_id]</ondown>
			</control>
			<control type="image" id="700$PARAM[item_id]1">
				<left>50</left>
				<top>100</top>
				<width>1820</width>
				<height>920</height>
				<texture>dialogs/dialog-bg-nobo.png</texture>
				<bordertexture border="21" infill="false">overlays/shadow.png</bordertexture>
				<bordersize>20</bordersize>
			</control>
			<control type="image" id="700$PARAM[item_id]2">
				<left>120</left>
				<top>160</top>
				<width>1680</width>
				<height>800</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Area)]</texture>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="image" id="700$PARAM[item_id]3">
				<left>120</left>
				<top>160</top>
				<width>1680</width>
				<height>800</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Layer)]</texture>
				<aspectratio>scale</aspectratio>
				<colordiffuse>B0FFFFFF</colordiffuse>
			</control>
			<control type="image" id="700$PARAM[item_id]4">
				<left>1000</left>
				<top>858</top>
				<width>340</width>
				<height>100</height>
				<texture border="21">buttons/button-nofo.png</texture>
			</control>
			<control type="image" id="700$PARAM[item_id]5">
				<left>1340</left>
				<top>880</top>
				<width>350</width>
				<height>55</height>
				<texture>$INFO[Window(weather).Property(Map.$PARAM[item_id].Legend)]</texture>
			</control>
		</control>
		<control type="label" id="700$PARAM[item_id]9">
			<left>1000</left>
			<top>0</top>
			<width>340</width>
			<height>100</height>
			<align>center</align>
			<aligny>center</aligny>
			<animation effect="slide" end="0,-92" time="0" condition="true">Conditional</animation>
			<font>font30_title</font>
			<label>$INFO[Window(weather).Property(Map.$PARAM[item_id].Heading)]</label>
			<visible>Weather.IsFetched + !String.IsEmpty(Window(weather).Property(Map.$PARAM[item_id].Area)) + !String.IsEmpty(Window(weather).Property(Map.IsFetched))</visible>
		</control>
	</include>

	<include name="WidgetListCommon">
		<scrolltime tween="cubic" easing="out">700</scrolltime>
		<orientation>horizontal</orientation>
		<onleft condition="String.IsEqual(Skin.String(onLeftSetting),0)">9000</onleft>
		<onleft condition="String.IsEqual(Skin.String(onLeftSetting),1)">$PARAM[list_id]</onleft>
		<onright>$PARAM[list_id]</onright>
		<onback condition="String.IsEqual(Skin.String(onBackSetting),1) | String.IsEqual(Skin.String(onBackSetting),2)">SetFocus($PARAM[list_id],0,absolute)</onback>
		<onback condition="String.IsEqual(Skin.String(onBackSetting),0) | String.IsEqual(Skin.String(onBackSetting),2)">9000</onback>
		<onfocus condition="!Skin.HasSetting(Disable.WidgetNavigationArrows)">RunScript(script.nimbus.helper,mode=set_widget_count,$PARAM[list_id])</onfocus>

		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),19)">ClearProperty(NimbusInitialStartup_movies,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),22)">ClearProperty(NimbusInitialStartup_tvshows,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),23)">ClearProperty(NimbusInitialStartup_custom1,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),24)">ClearProperty(NimbusInitialStartup_custom2,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),25)">ClearProperty(NimbusInitialStartup_custom3,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),7)">ClearProperty(NimbusInitialStartup_music,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),8)">ClearProperty(NimbusInitialStartup_addons,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),16)">ClearProperty(NimbusInitialStartup_musicvideos,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),12)">ClearProperty(NimbusInitialStartup_livetv,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),13)">ClearProperty(NimbusInitialStartup_radio,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),4)">ClearProperty(NimbusInitialStartup_pictures,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),11)">ClearProperty(NimbusInitialStartup_videos,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),17)">ClearProperty(NimbusInitialStartup_games,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),15)">ClearProperty(NimbusInitialStartup_weather,home)</onfocus>
		<onfocus>SetProperty(nimbus_saved_list_id,$PARAM[list_id],home)</onfocus>
		<onfocus>ClearProperty(nimbus_episode_thumb,home)</onfocus>
		<onfocus>ClearProperty(nimbus_episode_fanart,home)</onfocus>
		<onfocus>ClearProperty(nimbus_episode_landscape,home)</onfocus>
		<onfocus>ClearProperty(nimbus_fanart_art,home)</onfocus>
		<onfocus>ClearProperty(nimbus_fanart_prop,home)</onfocus>
		<onfocus>ClearProperty(nimbus_landscape_art,home)</onfocus>
		<onfocus>ClearProperty(nimbus_landscape_prop,home)</onfocus>

		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),19)">ClearProperty(nimbus_movies_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),22)">ClearProperty(nimbus_tvshows_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),23)">ClearProperty(nimbus_custom1_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),24)">ClearProperty(nimbus_custom2_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),25)">ClearProperty(nimbus_custom3_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),7)">ClearProperty(nimbus_music_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),8)">ClearProperty(nimbus_addons_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),16)">ClearProperty(nimbus_musicvideos_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),12)">ClearProperty(nimbus_livetv_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),13)">ClearProperty(nimbus_radio_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),4)">ClearProperty(nimbus_pictures_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),11)">ClearProperty(nimbus_videos_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),17)">ClearProperty(nimbus_games_first_widget,home)</onfocus>
		<onfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),15)">ClearProperty(nimbus_weather_first_widget,home)</onfocus>

		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),19) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_movies_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),22) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_tvshows_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),23) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_custom1_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),24) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_custom2_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),25) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_custom3_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),7) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_music_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),8) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_addons_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),16) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_musicvideos_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),12) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_livetv_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),13) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_radio_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),4) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_pictures_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),11) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_videos_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),17) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_games_first_widget,true,home)</onunfocus>
		<onunfocus condition="String.StartsWith(Window(Home).Property(nimbus_saved_list_id),15) + String.EndsWith(Window(Home).Property(nimbus_saved_list_id),11)">SetProperty(nimbus_weather_first_widget,true,home)</onunfocus>

		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isEpisode]">SetProperty(nimbus_episode_thumb,$INFO[Container($PARAM[list_id]).ListItem(0).Art(thumb)],home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isEpisode]">SetProperty(nimbus_episode_fanart,$INFO[Container($PARAM[list_id]).ListItem(0).Art(fanart)],home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isEpisode]">SetProperty(nimbus_episode_landscape,$INFO[Container($PARAM[list_id]).ListItem(0).Art(landscape)],home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork)">SetProperty(nimbus_fanart_art, $INFO[Container($PARAM[list_id]).ListItem(0).Art(fanart)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork)">SetProperty(nimbus_fanart_prop, $INFO[Container($PARAM[list_id]).ListItem(0).Property(fanart)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isContent] + !$EXP[isEpisode] + ![String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Art(landscape)) + !String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Art(fanart))]">SetProperty(nimbus_landscape_art, $INFO[Container($PARAM[list_id]).ListItem(0).Art(landscape)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isContent] + !$EXP[isEpisode] + [String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Art(landscape)) + !String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Art(fanart))]">SetProperty(nimbus_landscape_art, $INFO[Container($PARAM[list_id]).ListItem(0).Art(fanart)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isContent] + !$EXP[isEpisode] + ![String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Property(landscape)) + !String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Property(fanart))]">SetProperty(nimbus_landscape_prop, $INFO[Container($PARAM[list_id]).ListItem(0).Property(landscape)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + $EXP[isContent] + !$EXP[isEpisode] + [String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Property(landscape)) + !String.IsEmpty(Container($PARAM[list_id]).ListItem(0).Property(fanart))]">SetProperty(nimbus_landscape_prop, $INFO[Container($PARAM[list_id]).ListItem(0).Property(fanart)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + !$EXP[isContent]">SetProperty(nimbus_landscape_art, $INFO[Container($PARAM[list_id]).ListItem(0).Art(fanart)], home)</onunfocus>
		<onunfocus condition="!Skin.HasSetting(Disable.PersistentArtwork) + !$EXP[isContent]">SetProperty(nimbus_landscape_prop, $INFO[Container($PARAM[list_id]).ListItem(0).Property(fanart)], home)</onunfocus>
		<preloaditems>2</preloaditems>
	</include>

	<include name="BusyListSpinner">
		<param name="posy">160</param>
		<param name="posx">180</param>
		<param name="visible">true</param>
		<definition>
			<control type="group" id="$PARAM[list_id]599">
				<height>160</height>
				<left>$PARAM[posx]</left>
				<visible>Container($PARAM[list_id]).IsUpdating + !Integer.IsGreater(Container($PARAM[list_id]).NumItems,0)</visible>
				<visible>$PARAM[visible]</visible>
				<control type="image">
					<top>$PARAM[posy]</top>
					<width>300</width>
					<height>300</height>
					<aspectratio aligny="center">keep</aspectratio>
					<texture colordiffuse="$VAR[MenuSelectorColor]">loading.gif</texture>
				</control>
				<!-- <control type="image">
					<top>$PARAM[posy]</top>
					<width>80</width>
					<height>80</height>
					<aspectratio aligny="center">keep</aspectratio>
					<texture colordiffuse="unfocused_text">dialogs/extendedprogress/loading.png</texture>
					<animation effect="rotate" center="auto" start="360" end="0" time="1500" loop="true" condition="true">Conditional</animation>
				</control> -->
			</control>
		</definition>
	</include>

	<include name="WidgetScrollbar">
		<control type="group">
			<right>0</right>
			<width>60</width>
			<control type="scrollbar" id="$PARAM[scrollbar_id]">
				<right>0</right>
				<top>0</top>
				<bottom>0</bottom>
				<width>13</width>
				<onleft>50</onleft>
				<onright>50</onright>
				<orientation>vertical</orientation>
				<texturesliderbackground />
				<hitrect x="0" y="0" w="60" h="100%" />
				<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
				<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
				<animation effect="slide" end="6,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[scrollbar_id])">conditional</animation>
			</control>
		</control>
	</include>

	<include name="NimbusSkinStringsInitialization">
		<onload condition="!Skin.HasSetting(firsttimerun)">ActivateWindow(1112)</onload>
		<onload condition="Skin.HasSetting(firsttimerun)">RunScript(script.nimbus.helper,mode=check_for_update&amp;skin_id=skin.nimbus)</onload>
		<onload>RunScript(script.nimbus.helper,mode=check_for_profile_change&amp;skin_id=skin.nimbus)</onload>
		<onload>RunScript(script.nimbus.helper,mode=modify_keymap)</onload>
		<onload condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onload>
		<onload condition="String.IsEmpty(Skin.String(BlurRadius))">Skin.SetString(BlurRadius,30)</onload>	
		<onload condition="String.IsEmpty(Skin.String(BlurSaturation))">Skin.SetString(BlurSaturation,1.5)</onload>	
		<onload condition="String.IsEmpty(Skin.String(trailerSetting))">Skin.SetString(trailerSetting,0)</onload>	
		<onload condition="String.IsEmpty(Skin.String(waitInterval))">Skin.SetString(waitInterval,1)</onload>	
		<onload condition="String.IsEmpty(Skin.String(titleSetting))">Skin.SetString(titleSetting,0)</onload>	
		<onload condition="String.IsEmpty(Skin.String(onBackSetting))">Skin.SetString(onBackSetting,0)</onload>	
		<onload condition="String.IsEmpty(Skin.String(onLeftSetting))">Skin.SetString(onLeftSetting,0)</onload>	
		<onload condition="String.IsEmpty(Skin.String(TrailerDelaySecs))">Skin.SetString(TrailerDelaySecs,5)</onload>
		<onload condition="String.IsEmpty(Skin.String(PlaybackDelayMins))">Skin.SetString(PlaybackDelayMins,30)</onload>
		<onload condition="String.IsEmpty(Skin.String(PlaybackDelaySecs))">Skin.SetString(PlaybackDelaySecs,1800)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterFlowAutoInfoDelay))">Skin.SetString(PosterFlowAutoInfoDelay,2)</onload>
		<onload condition="String.IsEmpty(Skin.String(RevertFromWallDelay))">Skin.SetString(RevertFromWallDelay,2)</onload>
		<onload condition="String.IsEmpty(Skin.String(TrailerSource))">Skin.SetString(TrailerSource,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(current_search_provider))">Skin.SetString(current_search_provider,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OSDAudioButtonSetting))">Skin.SetString(OSDAudioButtonSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OSDSubtitleButtonSetting))">Skin.SetString(OSDSubtitleButtonSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(SearchSetting))">Skin.SetString(SearchSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(nimbus_digital_release_window))">Skin.SetString(nimbus_digital_release_window,7)</onload>
		<onload condition="String.IsEmpty(Skin.String(nimbus_digital_expired_window))">Skin.SetString(nimbus_digital_expired_window,21)</onload>

		<!-- Initialize rating slots -->
		<onload condition="String.IsEmpty(Skin.String(RatingSlot1))">Skin.SetString(RatingSlot1,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot2))">Skin.SetString(RatingSlot2,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot3))">Skin.SetString(RatingSlot3,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot4))">Skin.SetString(RatingSlot4,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot5))">Skin.SetString(RatingSlot5,none)</onload>
		<onload condition="String.IsEmpty(Skin.String(RatingSlot6))">Skin.SetString(RatingSlot6,none)</onload>

		<onload condition="String.IsEmpty(Skin.String(OSDStyleSetting))">Skin.SetString(OSDStyleSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(MenuCaseSetting))">Skin.SetString(MenuCaseSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnDownSetting.MovieTV))">Skin.SetString(OnDownSetting.MovieTV,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnDownSetting.Other))">Skin.SetString(OnDownSetting.Other,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterFlowOnDownSetting.MovieTV))">Skin.SetString(PosterFlowOnDownSetting.MovieTV,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(PosterFlowOnDownSetting.Other))">Skin.SetString(PosterFlowOnDownSetting.Other,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnRightSetting.MovieTV))">Skin.SetString(OnRightSetting.MovieTV,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(OnRightSetting.Other))">Skin.SetString(OnRightSetting.Other,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(LandscapeWidgetSublabelSetting))">Skin.SetString(LandscapeWidgetSublabelSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(MenuSelectorColorThemeSetting))">Skin.SetString(MenuSelectorColorThemeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(FocusColorThemeSetting))">Skin.SetString(FocusColorThemeSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(DialogBackgroundSetting))">Skin.SetString(DialogBackgroundSetting,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ArtworkChoice.movies))">Skin.SetString(ArtworkChoice.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(HomeArtworkChoice))">Skin.SetString(HomeArtworkChoice,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(HomeLandscapeFanart))">Skin.SetString(HomeLandscapeFanart,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(HomeItemArtworkChoice))">Skin.SetString(HomeItemArtworkChoice,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(HomeEpisodeArtworkChoice))">Skin.SetString(HomeEpisodeArtworkChoice,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ArtworkChoice.tvshows))">Skin.SetString(ArtworkChoice.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ArtworkChoice.seasons))">Skin.SetString(ArtworkChoice.seasons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ArtworkChoice.episodes))">Skin.SetString(ArtworkChoice.episodes,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.movies))">Skin.SetString(ListArtworkChoice.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.tvshows))">Skin.SetString(ListArtworkChoice.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.seasons))">Skin.SetString(ListArtworkChoice.seasons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.episodes))">Skin.SetString(ListArtworkChoice.episodes,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.videos))">Skin.SetString(ListArtworkChoice.videos,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.addons))">Skin.SetString(ListArtworkChoice.addons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.files))">Skin.SetString(ListArtworkChoice.files,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.favourites))">Skin.SetString(ListArtworkChoice.favourites,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListArtworkChoice.))">Skin.SetString(ListArtworkChoice.,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(LandscapeFanart.movies))">Skin.SetString(LandscapeFanart.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(LandscapeFanart.tvshows))">Skin.SetString(LandscapeFanart.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(LandscapeFanart.seasons))">Skin.SetString(LandscapeFanart.seasons,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(LandscapeFanart.episodes))">Skin.SetString(LandscapeFanart.episodes,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.movies))">Skin.SetString(ListLandscape.movies,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.tvshows))">Skin.SetString(ListLandscape.tvshows,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.seasons))">Skin.SetString(ListLandscape.seasons,1)</onload>
		<onload condition="String.IsEmpty(Skin.String(ListLandscape.episodes))">Skin.SetString(ListLandscape.episodes,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemFanartChoice.movies))">Skin.SetString(ItemFanartChoice.movies,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemFanartChoice.tvshows))">Skin.SetString(ItemFanartChoice.tvshows,0)</onload>
		<onload condition="String.IsEmpty(Skin.String(ItemFanartChoice.seasons))">Skin.SetString(ItemFanartChoice.seasons,0)</onload>
		<onload condition="!String.IsEmpty(Skin.String(mdblist_api_key)) + String.IsEmpty(Skin.String(valid_api_key))">RunScript(script.nimbus.helper, mode=check_api_key_on_load)</onload>
	</include>

</includes>