<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include file="Defaults.xml" />
	<include file="Expressions.xml" />
	<include file="Includes_Home.xml" />
	<include file="Includes_HomeLayouts.xml" />
	<include file="Includes_Animations.xml" />
	<include file="Includes_Games.xml" />
	<include file="Includes_MediaMenu.xml" />
	<include file="Includes_Buttons.xml" />
	<include file="Includes_DialogSelect.xml" />
	<include file="Includes_ListItem.xml" />
	<include file="Includes_MusicInfo.xml" />
	<include file="Includes_PVR.xml" />
	<include file="Includes_FlixPanel.xml" />
	<include file="Includes_Weather.xml" />
	<include file="Includes_Seekbar.xml" />
	<include file="script-nimbus-main_menu_movies.xml" />
	<include file="script-nimbus-main_menu_tvshows.xml" />
	<include file="script-nimbus-main_menu_custom1.xml" />
	<include file="script-nimbus-main_menu_custom2.xml" />
	<include file="script-nimbus-main_menu_custom3.xml" />
	<include file="script-nimbus-main_menu_custom4.xml" />
	<include file="script-nimbus-main_menu_custom5.xml" />
	<include file="script-nimbus-main_menu_custom6.xml" />
	<include file="script-nimbus-widget_movies.xml" />
	<include file="script-nimbus-widget_tvshows.xml" />
	<include file="script-nimbus-widget_custom1.xml" />
	<include file="script-nimbus-widget_custom2.xml" />
	<include file="script-nimbus-widget_custom3.xml" />
	<include file="script-nimbus-widget_custom4.xml" />
	<include file="script-nimbus-widget_custom5.xml" />
	<include file="script-nimbus-widget_custom6.xml" />
	<include file="script-nimbus-search_history.xml" />
	<include file="View_50_List.xml" />
	<include file="View_52_IconWall.xml" />
	<include file="View_54_Flix.xml" />
	<include file="View_55_FlixScape.xml" />
	<include file="View_56_FlixList.xml" />
	<include file="View_503_NowPlaying.xml" />
	<include file="View_500_Wall.xml" />
	<include file="View_501_WallScape.xml" />
	<include file="Custom_1121_SearchResults.xml" />
	<include file="Variables.xml" />
	<include file="Variables_Artwork.xml" />
	<include file="Variables_FlixPanel.xml" />
	<include file="Variables_MyVariables.xml" />
	<include file="Variables_HelpTexts.xml" />
	<include file="Variables_Search.xml" />
	<include file="Variables_Seekbar.xml" />
	<include file="Variables_Trailers.xml" />
	<constant name="DepthDialog">0.50</constant>
	<constant name="DepthDialog+">0.52</constant>
	<constant name="DepthDialog-">0.48</constant>
	<constant name="DepthMax">0.54</constant>
	<constant name="DepthOSD">0.40</constant>
	<constant name="DepthOSD+">0.44</constant>
	<constant name="DepthContentPopout">0.10</constant>
	<constant name="DepthContentPanel">0.05</constant>
	<constant name="DepthBars">0.12</constant>
	<constant name="DepthBackground">-0.80</constant>
	<constant name="DepthSideBlade">0.10</constant>
	<constant name="bg_alpha">79</constant>
	<constant name="dialogbuttons_itemgap">14</constant>
	<constant name="list_bottom">0</constant>
	<constant name="list_bottom_offset">70</constant>
	<constant name="list_top_offset">660</constant>
	<constant name="list_item_height">69</constant>

	<include name="CommonScrollbars">
		<param name="bottom_offset">list_bottom_offset</param>
		<definition>
			<control type="group">
				<animation effect="fade" start="100" end="0" time="150">WindowClose</animation>
				<animation effect="fade" start="100" end="0" time="200" tween="sine" condition="System.HasActiveModalDialog">Conditional</animation>
				<animation effect="fade" start="0" end="100" delay="300" time="320">WindowOpen</animation>
				<control type="group">
					<left>-41</left>
					<top>list_top_offset</top>
					<width>60</width>
					<bottom>$PARAM[bottom_offset]</bottom>
					<control type="scrollbar" id="531">
						<left>35</left>
						<top>0</top>
						<bottom>7</bottom>
						<width>12</width>
						<texturesliderbar colordiffuse="$VAR[MenuSelectorColor]">colors/white.png</texturesliderbar>
						<texturesliderbarfocus colordiffuse="$VAR[MenuSelectorColor]">colors/white.png</texturesliderbarfocus>
						<onleft condition="![Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)]">9000</onleft>
						<onleft condition="Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)">9000</onleft>
						<onright condition="![Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)]">50</onright>
						<onright condition="Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)">56</onright>
						<orientation>vertical</orientation>
						<texturesliderbackground />
						<animation effect="zoom" end="50,100" time="300" tween="sine" center="35,0" easing="inout" condition="![Container.Scrolling | Control.HasFocus(531)]">conditional</animation>
						<visible>Control.IsVisible(52) | Control.IsVisible(56)</visible>
					</control>
					<control type="scrollbar" id="532">
						<left>35</left>
						<top>-542</top>
						<bottom>155</bottom>
						<width>12</width>
						<texturesliderbar colordiffuse="$VAR[MenuSelectorColor]">colors/white.png</texturesliderbar>
						<texturesliderbarfocus colordiffuse="$VAR[MenuSelectorColor]">colors/white.png</texturesliderbarfocus>
						<onleft condition="![Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)]">9000</onleft>
						<onleft condition="Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)">9000</onleft>
						<onright condition="![Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)]">50</onright>
						<onright condition="Window.IsVisible(musicplaylist) | Window.IsVisible(videoplaylist)">56</onright>
						<orientation>vertical</orientation>
						<texturesliderbackground />
						<animation effect="zoom" end="50,100" time="300" tween="sine" center="35,0" easing="inout" condition="![Container.Scrolling | Control.HasFocus(532)]">conditional</animation>
						<visible>Control.IsVisible(500) | Control.IsVisible(501)</visible>
					</control>
				</control>
				<control type="group">
					<left>60</left>
					<right>0</right>
					<bottom>-7</bottom>
					<width>94%</width>
					<height>60</height>
					<control type="scrollbar" id="5199">
						<left>0</left>
						<bottom>0</bottom>
						<width>100%</width>
						<height>12</height>
						<texturesliderbackground />
						<onup>50</onup>
						<texturesliderbar colordiffuse="$VAR[MenuSelectorColor]">colors/white.png</texturesliderbar>
						<texturesliderbarfocus colordiffuse="$VAR[MenuSelectorColor]">colors/white.png</texturesliderbarfocus>
						<ondown condition="Control.IsVisible(54)">Container.SetViewMode(500)</ondown>
						<ondown condition="Control.IsVisible(55)">Container.SetViewMode(501)</ondown>
						<orientation>horizontal</orientation>
						<visible>Control.IsVisible(54) | Control.IsVisible(55)</visible>
						<animation effect="slide" end="0,6" time="300" tween="sine" easing="inout" condition="![Control.HasFocus(5199) | Container.Scrolling]">conditional</animation>
						<animation effect="fade" start="0" end="100" time="200" delay="300">Visible</animation>
						<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
						<animation effect="slide" end="0,90" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
						<hitrect x="0" y="20" w="100%" h="40" />
					</control>
				</control>
			</control>
		</definition>
	</include>

	<include name="HiddenObject">
		<left>-3000</left>
		<top>-3000</top>
		<width>1</width>
		<height>1</height>
		<texturefocus />
		<texturenofocus />
		<label></label>
		<font></font>
	</include>

	<include name="RatingCircle">
		<param name="animation">False</param>
		<definition>
			<control type="group">
				<animation effect="fade" time="0" condition="$PARAM[animation]">VisibleChange</animation>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_userrating)">
					<param name="infolabel" value="ListItem.UserRating" />
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="label-left" value="$PARAM[label-left]"/>
					<param name="label-top" value="$PARAM[label-top]"/>
					<param name="cornerdiffuse" value="$PARAM[cornerdiffuse]"/>
				</include>
				<include content="UserRatingContent" condition="Skin.HasSetting(circle_rating)">
					<param name="infolabel" value="ListItem.Rating" />
					<param name="left" value="$PARAM[left]"/>
					<param name="top" value="$PARAM[top]"/>
					<param name="width" value="$PARAM[width]"/>
					<param name="height" value="$PARAM[height]"/>
					<param name="label-left" value="$PARAM[label-left]"/>
					<param name="label-top" value="$PARAM[label-top]"/>
					<param name="cornerdiffuse" value="$PARAM[cornerdiffuse]"/>
				</include>
			</control>
		</definition>
	</include>

	<include name="UserRatingContent">
		<visible>!String.IsEmpty($PARAM[infolabel])</visible>
		<control type="image">
			<left>$PARAM[left]</left>
			<top>$PARAM[top]</top>
			<width>$PARAM[width]</width>
			<height>$PARAM[height]</height>
			<aspectratio>scale</aspectratio>
			<texture>$PARAM[cornerdiffuse]</texture>
		</control>
		<control type="label">
			<left>$PARAM[label-left]</left>
			<top>$PARAM[label-top]</top>
			<align>right</align>
			<width>44</width>
			<height>44</height>
			<font>font20_title</font>
			<label>$INFO[$PARAM[infolabel]]</label>
		</control>
	</include>

	<include name="InfoList">
		<param name="item_label">$INFO[ListItem.Year,[COLOR button_focus],[/COLOR]  -  ]$INFO[ListItem.Label]</param>
		<param name="path">$VAR[InfoListPathVar]</param>
		<param name="item_height">40</param>
		<param name="bottom">100</param>
		<param name="width">1152</param>
		<param name="list_id">5000</param>
		<param name="font">font13</param>
		<param name="sortby"></param>
		<param name="sortorder">ascending</param>
		<param name="visible">true</param>
		<definition>
			<control type="panel" id="$PARAM[list_id]">
				<top>0</top>
				<width>$PARAM[width]</width>
				<bottom>$PARAM[bottom]</bottom>
				<orientation>vertical</orientation>
				<visible>$PARAM[visible]</visible>
				<focusedlayout height="$PARAM[item_height]" width="$PARAM[width]">
					<control type="label">
						<left>10</left>
						<height>$PARAM[item_height]</height>
						<width>$PARAM[width]</width>
						<aligny>center</aligny>
						<label>$PARAM[item_label]</label>
						<shadowcolor>text_shadow</shadowcolor>
						<font>$PARAM[font]</font>
					</control>
				</focusedlayout>
				<itemlayout height="$PARAM[item_height]" width="$PARAM[width]">
					<control type="label">
						<left>10</left>
						<height>$PARAM[item_height]</height>
						<width>$PARAM[width]</width>
						<aligny>center</aligny>
						<label>$PARAM[item_label]</label>
						<shadowcolor>text_shadow</shadowcolor>
						<font>$PARAM[font]</font>
					</control>
				</itemlayout>
				<content sortby="$PARAM[sortby]" sortorder="$PARAM[sortorder]">$PARAM[path]</content>
			</control>
		</definition>
	</include>

	<include name="PicsInfoLine">
		<control type="grouplist">
			<visible>!String.IsEmpty($PARAM[value])</visible>
			<height>45</height>
			<orientation>horizontal</orientation>
			<width>570</width>
			<itemgap>10</itemgap>
			<control type="label">
				<width>auto</width>
				<height>40</height>
				<aligny>center</aligny>
				<label>$PARAM[label]:</label>
				<textcolor>button_focus</textcolor>
			</control>
			<control type="label">
				<width>auto</width>
				<height>40</height>
				<align>right</align>
				<aligny>center</aligny>
				<label>$INFO[$PARAM[value]]</label>
			</control>
		</control>
	</include>

	<include name="DefaultSimpleListLayout">
		<param name="align">left</param>
		<param name="height">75</param>
		<param name="font">font32</param>
		<param name="fontcolor">darkgrey</param>
		<param name="diffuse">$PARAM[diffuse]</param>
		<definition>
			<itemlayout width="$PARAM[width]" height="$PARAM[height]">
				<control type="group">
					<visible>ListItem.Property(PVR.IsRecordingTimer) | ListItem.Property(PVR.IsRemindingTimer)</visible>
					<control type="image">
						<left>20</left>
						<width>40</width>
						<aspectratio align="left">keep</aspectratio>
						<aligny>center</aligny>
						<texture>icons/pvr/timers/recording.png</texture>
						<visible>ListItem.Property(PVR.IsRecordingTimer)</visible>
					</control>
					<control type="image">
						<left>20</left>
						<width>40</width>
						<aspectratio align="left">keep</aspectratio>
						<aligny>center</aligny>
						<texture>icons/pvr/timers/bell.png</texture>
						<visible>ListItem.Property(PVR.IsRemindingTimer)</visible>
					</control>
					<control type="label">
						<left>80</left>
						<top>-3</top>
						<right>20</right>
						<bottom>0</bottom>
						<align>$PARAM[align]</align>
						<font>$PARAM[font]</font>
						<aligny>center</aligny>
						<textcolor>$PARAM[fontcolor]</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</control>
				<control type="group">
					<visible>!ListItem.Property(PVR.IsRecordingTimer) + !ListItem.Property(PVR.IsRemindingTimer)</visible>
					<control type="label">
						<left>45</left>
						<top>-3</top>
						<right>45</right>
						<bottom>0</bottom>
						<align>$PARAM[align]</align>
						<font>$PARAM[font]</font>
						<aligny>left</aligny>
						<textoffsety>17</textoffsety>
						<textcolor>darkgrey</textcolor>
						<label>$INFO[ListItem.Label]</label>
					</control>
				</control>
			</itemlayout>
			<focusedlayout width="$PARAM[width]" height="$PARAM[height]">
				<control type="image">
					<left>25</left>
					<top>0</top>
					<right>25</right>
					<bottom>0</bottom>
					<texture colordiffuse="$VAR[FocusColorTheme]">$PARAM[diffuse]</texture>
					<animation effect="fade" start="100" end="50" time="40" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
				</control>
				<control type="group">
					<visible>ListItem.Property(PVR.IsRecordingTimer) | ListItem.Property(PVR.IsRemindingTimer)</visible>
					<control type="image">
						<left>20</left>
						<width>40</width>
						<aspectratio align="left">keep</aspectratio>
						<aligny>center</aligny>
						<texture>icons/pvr/timers/recording.png</texture>
						<visible>ListItem.Property(PVR.IsRecordingTimer)</visible>
					</control>
					<control type="image">
						<left>20</left>
						<width>40</width>
						<aspectratio align="left">keep</aspectratio>
						<aligny>center</aligny>
						<texture>icons/pvr/timers/bell.png</texture>
						<visible>ListItem.Property(PVR.IsRemindingTimer)</visible>
					</control>
					<control type="label">
						<left>80</left>
						<top>-3</top>
						<right>20</right>
						<bottom>0</bottom>
						<align>$PARAM[align]</align>
						<font>$PARAM[font]</font>
						<aligny>center</aligny>
						<label>$INFO[ListItem.Label]</label>
						<scroll>true</scroll>
					</control>
				</control>
				<control type="group">
					<visible>!ListItem.Property(PVR.IsRecordingTimer) + !ListItem.Property(PVR.IsRemindingTimer)</visible>
					<control type="label">
						<left>45</left>
						<top>-3</top>
						<right>45</right>
						<bottom>0</bottom>
						<align>$PARAM[align]</align>
						<font>$PARAM[font]</font>
						<aligny>left</aligny>
						<textoffsety>17</textoffsety>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[FocusedTextColorVar]</textcolor>
						<scroll>true</scroll>
					</control>
				</control>
			</focusedlayout>
		</definition>
	</include>

	<include name="InfoFlag">
		<control type="group">
			<width>180</width>
			<visible>$PARAM[visible]</visible>
			<control type="image">
				<top>-3</top>
				<left>0</left>
				<width>40</width>
				<height>40</height>
				<texture colordiffuse="white">$PARAM[icon]</texture>
			</control>
			<control type="label">
				<left>50</left>
				<width>180</width>
				<height>35</height>
				<aligny>center</aligny>
				<font>font12</font>
				<label>$PARAM[label]</label>
			</control>
		</control>
	</include>

	<!-- <include name="MediaFlag">
		<param name="width">115</param>
		<param name="height">60</param>
		<param name="visible">true</param>
		<definition>
			<control type="image">
				<width>$PARAM[width]</width>
				<height>$PARAM[height]</height>
				<fadetime>0</fadetime>
				<aspectratio align="center" aligny="center">keep</aspectratio>
				<texture colordiffuse="artwork_dim">$PARAM[texture]</texture>
				<visible>$PARAM[visible]</visible>
				<visible>![Skin.HasSetting(TrailerPlaying) | Window.IsVisible(12003) | Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(50) | Control.IsVisible(500) | Control.IsVisible(501)]</visible>
			</control>
		</definition>
	</include> -->

	<!-- <include name="MediaFlags">
		<param name="infolabel_prefix"></param>
		<param name="resolution_var">$VAR[ResolutionFlagVar]</param>
		<definition>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<right>20</right>
				<top>0</top>
				<height>70</height>
				<align>right</align>
				<itemgap>10</itemgap>
				<width>1900</width>
				<usecontrolcoords>true</usecontrolcoords>
				<control type="group">
					<width>140</width>
					<visible>[System.AddonIsEnabled(resource.images.studios.white) | System.AddonIsEnabled(resource.images.studios.coloured)] + !String.IsEmpty($PARAM[infolabel_prefix]ListItem.Studio)</visible>
					<include condition="!Skin.HasSetting(Disable.ColorStudio)" content="MediaFlag">
						<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.Studio,resource://resource.images.studios.white/,.png]" />
					</include>
					<include condition="Skin.HasSetting(Disable.ColorStudio)" content="MediaFlag">
						<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.Studio,resource://resource.images.studios.coloured/,.png]" />
					</include>
				</control>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[ListItem.VideoCodec,flags/videocodec/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoCodec)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$PARAM[resolution_var]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoResolution)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[ListItem.HdrType,flags/videohdr/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.HdrType)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[ListItem.VideoAspect,flags/aspectratio/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.VideoAspect)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.AudioCodec,flags/audiocodec/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioCodec)" />
				</include>
				<include content="MediaFlag">
					<param name="texture" value="$INFO[$PARAM[infolabel_prefix]ListItem.AudioChannels,flags/audiochannel/,.png]" />
					<param name="visible" value="!String.IsEmpty($PARAM[infolabel_prefix]ListItem.AudioChannels)" />
				</include>
			</control>
		</definition>
	</include> -->

	<include name="WeatherIconMyWeather">
		<control type="group">
			<width>268</width>
			<visible>!String.IsEmpty($PARAM[label])</visible>
			<control type="image">
				<left>50</left>
				<width>60</width>
				<height>60</height>
				<texture colordiffuse="D0FFFFFF">$PARAM[texture]</texture>
			</control>
			<control type="textbox">
				<top>68</top>
				<width>160</width>
				<height>63</height>
				<font>font27_narrow</font>
				<textcolor>unfocused_text</textcolor>
				<align>center</align>
				<aligny>center</aligny>
				<label>$INFO[$PARAM[label]]</label>
			</control>
		</control>
	</include>

	<include name="FileManagerPanel">
		<param name="width"></param>
		<param name="right"></param>
		<definition>
			<control type="panel" id="$PARAM[list_id]">
				<left>0</left>
				<top>150</top>
				<bottom>list_bottom_offset</bottom>
				<right>$PARAM[right]</right>
				<width>$PARAM[width]</width>
				<height>840</height>
				<focusposition>4</focusposition>
				<movement>3</movement>
				<onleft>$PARAM[onleft_id]</onleft>
				<onright>$PARAM[onright_id]</onright>
				<onup>$PARAM[list_id]</onup>
				<ondown>$PARAM[list_id]</ondown>
				<pagecontrol>$PARAM[scrollbar_id]</pagecontrol>
				<scrolltime>200</scrolltime>
				<focusedlayout height="list_item_height">
					<control type="image">
						<left>25</left>
						<top>0</top>
						<right>25</right>
						<bottom>0</bottom>
						<texture colordiffuse="$VAR[FocusColorTheme]">masks/focus-long.png</texture>
						<animation effect="fade" start="100" end="0" time="40" condition="!Control.HasFocus($PARAM[list_id])">Conditional</animation>
					</control>
					<control type="image">
						<left>40</left>
						<top>-3</top>
						<width>32</width>
						<bottom>0</bottom>
						<aspectratio aligny="center">keep</aspectratio>
						<texture colordiffuse="$VAR[FocusedTextColorVar]">$VAR[ListWatchedIconVar]</texture>
					</control>
					<control type="label">
						<left>90</left>
						<top>0</top>
						<bottom>0</bottom>
						<right>20</right>
						<aligny>left</aligny>
						<textoffsety>11</textoffsety>
						<scroll>true</scroll>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>$VAR[FocusedTextColorVar]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<textoffsetx>30</textoffsetx>
						<top>0</top>
						<bottom>0</bottom>
						<right>0</right>
						<align>right</align>
						<aligny>left</aligny>
						<textoffsety>11</textoffsety>
						<label>$INFO[ListItem.Label2]</label>
						<textcolor>$VAR[FocusedTextColorVar]</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
					</control>
				</focusedlayout>
				<itemlayout height="list_item_height">
					<control type="image">
						<left>40</left>
						<top>-3</top>
						<width>32</width>
						<bottom>0</bottom>
						<aspectratio aligny="center">keep</aspectratio>
						<texture colordiffuse="unfocused_text">$VAR[ListWatchedIconVar]</texture>
					</control>
					<control type="label">
						<left>90</left>
						<top>0</top>
						<bottom>0</bottom>
						<right>20</right>
						<aligny>left</aligny>
						<textoffsety>11</textoffsety>
						<label>$INFO[ListItem.Label]</label>
						<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
					</control>
					<control type="label">
						<left>0</left>
						<textoffsetx>30</textoffsetx>
						<top>0</top>
						<bottom>0</bottom>
						<right>0</right>
						<align>right</align>
						<aligny>left</aligny>
						<textoffsety>11</textoffsety>
						<label>$INFO[ListItem.Label2]</label>
							<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
					</control>
				</itemlayout>
			</control>
		</definition>
	</include>

	<include name="AddonLauncherPanel">
		<param name="fallback_image">DefaultFolder.png</param>
		<definition>
			<control type="group" id="$PARAM[group_id]">
				<include content="Visible_Right_Delayed">
					<param name="id" value="$PARAM[id]"/>
				</include>
				<visible>String.IsEqual(Container(9000).ListItem.Property(id),$PARAM[id])</visible>
				<control type="group">
					<visible>Integer.IsGreater(Container($PARAM[group_id]50).NumItems,0) | Container($PARAM[group_id]50).IsUpdating</visible>
					<control type="panel" id="$PARAM[group_id]50">
						<left>460</left>
						<top>33</top>
						<height>80%</height>
						<onleft>9000</onleft>
						<onright>$PARAM[group_id]30</onright>
						<onup>$PARAM[group_id]50</onup>
						<ondown>$PARAM[group_id]50</ondown>
						<preloaditems>2</preloaditems>
						<pagecontrol>$PARAM[group_id]30</pagecontrol>
						<scrolltime tween="cubic" easing="out">500</scrolltime>
						<itemlayout height="375" width="350">
							<control type="group">
								<left>25</left>
								<top>150</top>
								<include content="FlixSquareLayout">
									<param name="fallback_image" value="DefaultAddon.png" />
								</include>
							</control>
						</itemlayout>
						<focusedlayout height="375" width="350" infoupdate="30">
							<control type="group">
								<left>25</left>
								<top>150</top>
								<include content="FlixSquareLayout">
									<param name="fallback_image" value="DefaultAddon.png" />
									<param name="focused" value="true" />
								</include>
							</control>
						</focusedlayout>
						<content sortby="lastused" sortorder="descending" target="$PARAM[container_target]">$PARAM[container_path]</content>
					</control>
					<control type="scrollbar" id="$PARAM[group_id]30">
						<right>0</right>
						<top>80</top>
						<width>12</width>
						<height>920</height>
						<orientation>vertical</orientation>
						<texturesliderbackground />
						<animation effect="slide" end="6,0" time="300" tween="sine" easing="inout" condition="!Control.HasFocus($PARAM[group_id]30)">conditional</animation>
						<onleft>$PARAM[group_id]50</onleft>
						<onright>noop</onright>
					</control>
				</control>
				<control type="group">
					<left>462</left>
					<include content="ImageWidget">
						<param name="text_label" value="$LOCALIZE[31153]" />
						<param name="button_label" value="$LOCALIZE[31144]" />
						<param name="left">50</param>
						<param name="button_onclick" value="$PARAM[imagewidget_onclick]"/>
						<param name="button_id" value="$PARAM[group_id]333"/>
						<param name="visible_2" value="false"/>
						<param name="visible" value="![Integer.IsGreater(Container($PARAM[group_id]50).NumItems,0) | Container($PARAM[group_id]50).IsUpdating]"/>
						<param name="button2_onclick" value="Skin.SetBool(HomeMenuNoTVShowButton)"/>
					</include>
				</control>
			</control>
		</definition>
	</include>

	<include name="LeftAlignedInfo">
		<param name="id">33333</param>
		<definition>
			<control type="grouplist">
				<left>20</left>
				<top>20</top>
				<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				<width>1400</width>
				<height>80</height>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<!-- <control type="label">
					<width>1400</width>
					<label>$PARAM[main_label]</label>
					<font>font12</font>
					<textcolor>unfocused_text</textcolor>
					<shadowcolor>text_shadow</shadowcolor>
					<height>45</height>
					<scroll>true</scroll>
					<animation effect="slide" start="0,0" end="0,15" time="0" condition="String.IsEmpty(Control.GetLabel($PARAM[id]))">Conditional</animation>
				</control> -->
				<control type="label" id="$PARAM[id]">
					<label>$PARAM[sub_label]</label>
					<textcolor>$VAR[FocusColorTheme]</textcolor>
					<font>font27_title</font>
					<left>85</left>
					<shadowcolor>text_shadow</shadowcolor>
					<height>100</height>
					<width>1400</width>
					<visible>!Skin.HasSetting(Enable.BackgroundBlur)</visible>
				</control>
				<control type="label" id="$PARAM[id]">
					<label>$PARAM[sub_label]</label>
					<textcolor>unfocused_text</textcolor>
					<font>font27_title</font>
					<left>85</left>
					<shadowcolor>text_shadow</shadowcolor>
					<height>100</height>
					<width>1400</width>
					<visible>Skin.HasSetting(Enable.BackgroundBlur)</visible>
				</control>
			</control>
		</definition>
	</include>

	<include name="InfoDialogTopBarInfo">
		<param name="id">33333</param>
		<param name="posy">20</param>
		<definition>
			<control type="grouplist">
				<left>100</left>
				<right>100</right>
				<top>$PARAM[posy]</top>
				<animation effect="fade" start="0" end="100" time="300" delay="300">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				<height>150</height>
				<itemgap>0</itemgap>
				<orientation>vertical</orientation>
				<control type="label">
					<width>100%</width>
					<label>$PARAM[main_label]</label>
					<font>font52_title</font>
					<shadowcolor>text_shadow</shadowcolor>
					<height>65</height>
					<align>center</align>
					<scroll>true</scroll>
					<animation effect="slide" start="0,0" end="0,25" time="0" condition="String.IsEmpty(Control.GetLabel($PARAM[id]))">Conditional</animation>
				</control>
				<control type="label" id="$PARAM[id]">
					<label>$PARAM[sub_label]</label>
					<left>85</left>
					<shadowcolor>text_shadow</shadowcolor>
					<align>center</align>
					<height>100</height>
					<width>100%</width>
				</control>
			</control>
		</definition>
	</include>

	<include name="WidgetUpDownArrows">
    <param name="visible">!Skin.HasSetting(Disable.WidgetNavigationArrows) + ![Control.HasFocus(9000) | Control.HasFocus(700) | Control.HasFocus(733)]</param>
    <definition>
			<control type="button" id="$PARAM[container_id]588">
				<include>WidgetNavigationAnimations</include>
				<left>45</left>
				<top>100</top>
				<width>33</width>
				<height>33</height>
				<texturefocus colordiffuse="$VAR[MenuSelectorColor]">overlays/arrowdown1.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[MenuSelectorColor]">overlays/arrowdown1.png</texturenofocus>
				<visible>Integer.IsGreater(Skin.Numeric(TotalWidgetCount),Container($PARAM[container_id]).Position) + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[container_id]589">
				<include>WidgetNavigationAnimations</include>
				<left>45</left>
				<top>89</top>
				<width>33</width>
				<height>33</height>
				<texturefocus colordiffuse="$VAR[MenuSelectorColor]" flipy="true">overlays/arrowdown1.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[MenuSelectorColor]" flipy="true">overlays/arrowdown1.png</texturenofocus>
				<visible>!String.IsEqual(Container($PARAM[container_id]).Position,1) + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[container_id]590">
				<include>WidgetNavigationAnimations</include>
				<left>45</left>
				<top>89</top>
				<width>33</width>
				<height>33</height>
				<texturefocus colordiffuse="$VAR[MenuSelectorColor]">overlays/arrowdown1.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[MenuSelectorColor]">overlays/arrowdown1.png</texturenofocus>
				<visible>String.IsEqual(Container($PARAM[container_id]).Position,1) + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[container_id]591">
				<include>WidgetNavigationAnimations</include>
				<left>45</left>
				<top>100</top>
				<width>33</width>
				<height>33</height>
				<texturefocus colordiffuse="$VAR[MenuSelectorColor]" flipy="true">overlays/arrowdown1.png</texturefocus>
				<texturenofocus colordiffuse="$VAR[MenuSelectorColor]" flipy="true">overlays/arrowdown1.png</texturenofocus>
				<visible>Integer.IsEqual(Container($PARAM[container_id]).Position,Skin.Numeric(TotalWidgetCount)) + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
    </definition>
	</include>

	<include name="UpDownArrows">
		<param name="up_posy">134</param>
		<param name="down_posy">910</param>
		<param name="posx">936</param>
		<param name="visible">true</param>
		<definition>
			<control type="button" id="$PARAM[container_id]588">
				<left>$PARAM[posx]</left>
				<top>$PARAM[down_posy]</top>
				<width>48</width>
				<height>48</height>
				<texturefocus colordiffuse="unfocused_text">overlays/arrowdown.png</texturefocus>
				<texturenofocus colordiffuse="unfocused_text">overlays/arrowdown.png</texturenofocus>
				<animation effect="zoom" start="100,0" end="100,100" center="auto" time="200" delay="10">VisibleChange</animation>
				<animation effect="zoom" start="100,0" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="200">WindowClose</animation>
				<onclick>SetFocus($PARAM[container_id])</onclick>
				<onclick>PageDown</onclick>
				<visible>Container($PARAM[container_id]).HasNext + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[container_id]589">
				<left>$PARAM[posx]</left>
				<top>$PARAM[up_posy]</top>
				<width>48</width>
				<height>48</height>
				<texturefocus colordiffuse="unfocused_text" flipy="true">overlays/arrowdown.png</texturefocus>
				<texturenofocus colordiffuse="unfocused_text" flipy="true">overlays/arrowdown.png</texturenofocus>
				<animation effect="zoom" start="100,0" end="100,100" center="auto" time="200" delay="10">VisibleChange</animation>
				<animation effect="zoom" start="100,0" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="100,0" center="auto" time="200">WindowClose</animation>
				<onclick>SetFocus($PARAM[container_id])</onclick>
				<onclick>PageUp</onclick>
				<visible>Container($PARAM[container_id]).HasPrevious + Control.IsVisible($PARAM[container_id])</visible>
				<visible>$PARAM[visible]</visible>
			</control>
		</definition>
	</include>

	<include name="LeftRightArrows">
		<param name="left_posx">445</param>
		<param name="right_posx">1843</param>
		<param name="posy">936</param>
		<param name="visible">!System.HasActiveModalDialog</param>
		<definition>
			<control type="image">
				<left>$PARAM[left_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texture flipx="true" colordiffuse="unfocused_text">overlays/arrowright.png</texture>
				<animation effect="zoom" start="0,100" end="100,100" center="auto" time="200">VisibleChange</animation>
				<animation effect="zoom" start="0,100" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="0,100" center="auto" time="200">WindowClose</animation>
				<visible>Control.IsVisible($PARAM[list_id]) + Container($PARAM[list_id]).HasPrevious</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="image">
				<left>$PARAM[right_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texture colordiffuse="unfocused_text">overlays/arrowright.png</texture>
				<animation effect="zoom" start="0,100" end="100,100" center="auto" time="200">VisibleChange</animation>
				<animation effect="zoom" start="0,100" end="100,100" delay="500" center="auto" time="200">WindowOpen</animation>
				<animation effect="zoom" start="100,100" end="0,100" center="auto" time="200">WindowClose</animation>
				<visible>Control.IsVisible($PARAM[list_id]) + Container($PARAM[list_id]).HasNext</visible>
				<visible>$PARAM[visible]</visible>
			</control>
			<control type="button" id="$PARAM[list_id]500">
				<left>$PARAM[left_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texturefocus />
				<texturenofocus />
				<onclick>Control.Move($PARAM[list_id],-1)</onclick>
				<visible allowhiddenfocus="true">Container($PARAM[list_id]).HasPrevious + [Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[list_id]500)]</visible>
			</control>
			<control type="button" id="$PARAM[list_id]501">
				<left>$PARAM[right_posx]</left>
				<top>$PARAM[posy]</top>
				<width>28</width>
				<height>28</height>
				<texturefocus />
				<texturenofocus />
				<onclick>Control.Move($PARAM[list_id],1)</onclick>
				<visible allowhiddenfocus="true">Container($PARAM[list_id]).HasNext + [Control.HasFocus($PARAM[list_id]) | Control.HasFocus($PARAM[list_id]501)]</visible>
			</control>
		</definition>
	</include>

	<include name="DialogBackgroundCommons">
		<control type="image">
			<left>-2000</left>
			<top>-2000</top>
			<width>6000</width>
			<height>6000</height>
			<animation effect="fade" time="300">VisibleChange</animation>
			<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
			<!-- <texture colordiffuse="f5282828">colors/black.png</texture> -->
			<!-- <texture colordiffuse="FC030303">colors/white.png</texture> -->
			<texture colordiffuse="F2FFFFFF">colors/black.png</texture>
			<visible>$PARAM[darken_bg]</visible>
		</control>
		<control type="button">
			<left>-2000</left>
			<top>-2000</top>
			<width>6000</width>
			<height>6000</height>
			<texturefocus />
			<texturenofocus />
			<onclick>Action(close)</onclick>
		</control>
		<control type="group">
			<control type="label" id="$PARAM[header_id]">
				<posx>0</posx> 
				<top>10</top>
				<height>70</height>
				<label>$PARAM[header_label]</label>
				<align>center</align> 
				<aligny>center</aligny>
				<font>font36_title</font>
				<textcolor>darkgrey</textcolor>
				<shadowcolor>black</shadowcolor>
			</control>
		</control>
	</include>

	<include name="ContextFade">
		<control type="image">
			<left>-1920</left>
			<top>-1080</top>
			<width>5760</width>
			<height>3240</height>
			<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
			<texture colordiffuse="F2FFFFFF">colors/black.png</texture>
		</control>
	</include>

	<include name="TopBar">
		<!-- <param name="sublabel">$INFO[Container.SortMethod,$LOCALIZE[31022]: ,  ∙  ]$INFO[Container.CurrentItem,, / ]$INFO[Container.NumItems]</param> -->
		<definition>
			<control type="group">
				<!-- <include>MediaMenuAnimations</include> -->
				<animation effect="slide" end="0,-112" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				<depth>DepthBars</depth>
				<!-- <animation effect="fade" start="0" end="100" time="300" condition="!Container.Scrolling">Conditional</animation> -->
				<animation effect="fade" start="0" end="100" time="300" condition="[Window.Previous(fullscreenvideo) | Window.Previous(startup)] + !Window.IsVisible(1109)">WindowOpen</animation>
				<visible>![Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)] | Window.IsVisible(extendedprogressdialog)</visible>
				<control type="image">
					<!-- <visible>Window.IsVisible(extendedprogressdialog)</visible> -->
					<left>0</left>
					<top>0</top>
					<width>110%</width>
					<height>170</height>
					<texture>frame/InfoBar.png</texture>
					<animation effect="fade" start="0" end="100" time="700">VisibleChange</animation>
					<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
				</control>
				<control type="grouplist">
					<width>900</width>
					<include content="TopBarLabels">
						<param name="breadcrumbs_label" value="$PARAM[breadcrumbs_label]" />
					</include>
					<visible>Player.HasMedia</visible>
				</control>
				<control type="grouplist">
					<animation condition="$EXP[sidebar_visible]" effect="slide" start="0,0" end="520,0" time="500" tween="cubic" easing="inout">Conditional</animation>
					<width>1800</width>
					<include content="TopBarLabels">
						<param name="breadcrumbs_label" value="$PARAM[breadcrumbs_label]" />
					</include>
					<visible>!Player.HasMedia</visible>
				</control>
				<control type="button">
					<top>0</top>
					<width>200</width>
					<height>100</height>
					<label></label>
					<onclick>Action(Back)</onclick>
					<visible>!Window.IsActive(home)</visible>
					<texturefocus />
					<texturenofocus />
				</control>
				<!-- <control type="label" id="18900">
					<top>50</top>
					<label>$PARAM[sublabel]</label>
					<left>35</left>
					<shadowcolor>text_shadow</shadowcolor>
					<height>100</height>
					<width>900</width>
					<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
					<animation effect="slide" end="70,0" time="200" reversible="true" condition="Control.IsVisible(799)">Conditional</animation>
				</control> -->
				<control type="grouplist">
					<top>0</top>
					<align>right</align>
					<right>33</right>
					<height>200</height>
					<orientation>horizontal</orientation>
					<width>1100</width>
					<itemgap>10</itemgap>
					<!-- <visible>![Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)]</visible> -->
					<visible>![Window.IsVisible(extendedprogressdialog) | Window.IsActive(fullscreenvideo) | !String.IsEmpty(Skin.String(TrailerPlaying))]</visible>
					<animation effect="fade" time="150">VisibleChange</animation>
					<control type="group">
						<width>600</width>
						<visible>!Control.IsVisible(503) + Player.HasMedia + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))</visible>
						<animation effect="fade" time="200">VisibleChange</animation>
						<control type="grouplist">
							<left>-75</left>
							<orientation>horizontal</orientation>
							<height>38</height>
							<top>14</top>
							<align>right</align>
							<width>660</width>
							<itemgap>5</itemgap>
							<usecontrolcoords>true</usecontrolcoords>
							<control type="image">
								<top>4</top>
								<width>32</width>
								<height>32</height>
								<aspectratio>keep</aspectratio>
								<texture colordiffuse="$VAR[FocusColorTheme]">$VAR[NowPlayingIconVar]</texture>
							</control>
							<control type="label">
								<label>$INFO[Player.Title]</label>
								<textcolor>unfocused_text</textcolor>
								<font>font27</font>
								<shadowcolor>text_shadow</shadowcolor>
								<height>35</height>
								<width min="1" max="602">auto</width>
							</control>
						</control>
						<control type="label" id="7700">
							<label>$VAR[NowPlayingSublabelVar]</label>
							<left>-44</left>
							<top>44</top>
							<font>font12</font>
							<textcolor>grey</textcolor>
							<shadowcolor>text_shadow</shadowcolor>
							<height>25</height>
							<width>630</width>
							<align>right</align>
							<scroll>true</scroll>
						</control>
					</control>
					<control type="group">
						<visible>Integer.IsGreater(System.ProfileCount,1) + !Player.HasMedia</visible>
						<control type="image">
							<visible>Skin.HasSetting(show_profileavatar)</visible>
							<top>25</top>
							<left>-70</left>
							<width>50</width>
							<height>50</height>
							<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
							<texture>$INFO[System.ProfileThumb]</texture>
							<aspectratio>scale</aspectratio>
						</control>
						<control type="label">
							<visible>Skin.HasSetting(show_profilename)</visible>
							<font>font45</font>
							<align>right</align>
							<left>-630</left>
							<shadowcolor>text_shadow</shadowcolor>
							<aligny>center</aligny>
							<height>110</height>
							<width max="600">auto</width>
							<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
							<label>$INFO[System.ProfileName]</label>
							<textcolor>unfocused_text</textcolor>
						</control>
					</control>
					<control type="image">
						<width>60</width>
						<height>110</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture colordiffuse="unfocused_text">$INFO[Weather.FanartCode,weather/small/,.png]</texture>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="label">
						<font>font45</font>
						<height>100</height>
						<width>auto</width>
						<aligny>center</aligny>
						<align>right</align>
						<label>[COLOR unfocused_text]$INFO[Window(Weather).Property(Current.Temperature)]$INFO[System.TemperatureUnits][/COLOR]  • </label>
						<textcolor>$VAR[MenuSelectorColor]</textcolor>
						<visible>Skin.HasSetting(show_weatherinfo) + Weather.IsFetched + ![String.IsEqual(Weather.FanartCode,na)]</visible>
					</control>
					<control type="label">
						<font>font45</font>
						<textcolor>unfocused_text</textcolor>
						<shadowcolor>text_shadow</shadowcolor>
						<aligny>center</aligny>
						<height>100</height>
						<width>auto</width>
						<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(screencalibration)">WindowClose</animation>
						<label>$INFO[System.Time]</label>
					</control>
				</control>
				<control type="grouplist">
					<right>10</right>
					<top>70</top>
					<width>800</width>
					<height>100</height>
					<align>right</align>
					<itemgap>5</itemgap>
					<orientation>horizontal</orientation>
					<usecontrolcoords>true</usecontrolcoords>
					<control type="label">
						<height>50</height>
						<width>auto</width>
						<aligny>center</aligny>
						<textoffsetx>-8</textoffsetx>
						<label>$INFO[System.AlarmPos]</label>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="image">
						<top>16</top>
						<width>40</width>
						<height>22</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="left">keep</aspectratio>
						<texture>icons/power.png</texture>
						<visible>System.HasAlarm(shutdowntimer)</visible>
					</control>
					<control type="image">
						<top>8</top>
						<left>-20</left>
						<width>74</width>
						<height>40</height>
						<fadetime>300</fadetime>
						<aspectratio aligny="center" align="center">keep</aspectratio>
						<texture>dialogs/volume/mute.png</texture>
						<visible>Player.Muted</visible>
					</control>
				</control>
				<control type="label" id="23000">
					<top>0</top>
					<left>0</left>
					<label>$INFO[ListItem.SortLetter]</label>
					<font>font_MainMenu</font>
					<width>100%</width>
					<height>80</height>
					<align>center</align>
					<visible>!System.HasActiveModalDialog</visible>
					<visible>Container.Scrolling</visible>
					<visible>!Container.Content(seasons)</visible>
					<visible>Container.SortMethod(1) | Container.SortMethod(4) | Container.SortMethod(12) | Container.SortMethod(10) | Container.SortMethod(7) | Container.SortMethod(29) | Container.SortMethod(17)</visible>
					<animation effect="fade" start="0" end="100" time="200" reversible="true">VisibleChange</animation>
					<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
				</control>
			</control>
			<include condition="Skin.HasSetting(touchmode) + !Window.IsActive(home)">TouchBackButton</include>
		</definition>
	</include>

	<include name="TopBarLabels">
		<visible>![Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)]</visible>
		
		<left>37</left>
		<description>Left side of top bar</description>
		<top>-7</top>
		<height>100</height>
		<orientation>horizontal</orientation>
		<usecontrolcoords>true</usecontrolcoords>
		<animation effect="fade" start="0" end="100" time="300">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
		<animation effect="slide" end="0,16" time="200" reversible="true" condition="String.IsEmpty(Control.GetLabel(18900))">Conditional</animation>
		<animation effect="slide" end="70,0" time="200" reversible="true" condition="Control.IsVisible(799)">Conditional</animation>
		<control type="label">
			<label>$PARAM[breadcrumbs_label]</label>
			<include>BreadcrumbsLabel</include>
		</control>
		<control type="label">
			<label>$INFO[Container.ShowTitle, / ]</label>
			<include>BreadcrumbsLabel</include>
			<visible>!String.IsEmpty(Container.ShowTitle) + !String.IsEqual(Container.ShowTitle,Container.FolderName)</visible>
		</control>
		<control type="label">
			<label> [B]»[/B] [COLOR unfocused_text]$INFO[Container.FolderName][/COLOR]</label>
			<include>BreadcrumbsLabel</include>
			<visible>![Container.Content()]</visible>
			<visible>![Window.IsActive(MyPVRChannels.xml) | Window.IsActive(MyPVRTimers.xml) | Window.IsActive(MyPVRRecordings.xml) | Window.IsActive(MyPVRSearch.xml) | Window.IsActive(MyVideoNav.xml)]</visible>
		</control>
		<control type="label">
			<label> [B]»[/B] [COLOR unfocused_text]$INFO[Container.PluginCategory][/COLOR]</label>
			<include>BreadcrumbsLabel</include>
			<visible>!String.isempty(Container.PluginCategory)</visible>
		</control>
		<control type="label">
			<label>$INFO[Control.GetLabel(10),: ]</label>
			<include>BreadcrumbsLabel</include>
			<visible>!String.IsEqual(Control.GetLabel(10),$LOCALIZE[16100]) + Window.IsActive(videos)</visible>
		</control>
		<control type="label">
			<left>10</left>
			<label>($LOCALIZE[31052])</label>
			<include>BreadcrumbsLabel</include>
			<visible>Container.Filtered</visible>
		</control>
	</include>
	<include name="BreadcrumbsLabel">
		<font>font45</font>
		<textcolor>$VAR[MenuSelectorColor]</textcolor>
		<shadowcolor>text_shadow</shadowcolor>
		<top>7</top>
		<height>100</height>
		<width>auto</width>
	</include>

	<include name="ColoredBackgroundImages">
		<control type="group">
			<visible>Skin.HasSetting(Enable.BackgroundBlur) + !Player.HasMedia</visible>
			<control type="image" id="100000">
				<visible>false</visible>
				<texture fallback="$VAR[NimbusCustomBackgroundImage]">$VAR[BlurTextureVar]</texture>
			</control>
			<control type="image">
				<fadetime>500</fadetime>
				<animation effect="zoom" center="auto" end="102,102" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
				<!-- <animation effect="fade" start="0" end="100" time="500">WindowOpen</animation>
				<animation effect="fade" start="100" end="0" time="500">WindowClose</animation>
				<animation effect="fade" time="400">VisibleChange</animation> -->
				<depth>DepthBackground</depth>
				<include>FullScreenDimensions</include>
				<aspectratio>scale</aspectratio>
				<texture colordiffuse="FF5F5F5F">$INFO[Window(home).Property(listitem_blurred)]</texture>
			</control>
		</control>
		
		<control type="group">
			<visible>!Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))</visible>
			<control type="image">
				<depth>DepthBackground</depth>
				<include>FullScreenDimensions</include>
				<aspectratio>scale</aspectratio>
				<texture colordiffuse="primary_background">special://skin/extras/backgrounds/primary.jpg</texture>
			<!-- <visible>
				!Skin.HasSetting(Enable.BackgroundBlur) + 
				[
						[![Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56) | Control.IsVisible(500) | Control.IsVisible(501)] | Control.IsVisible(400)] | 
						[
								[[Control.IsVisible(50) + 
									![Window.IsVisible(tvchannels) | Window.IsVisible(tvguide) | Window.IsVisible(tvrecordings) | Window.IsVisible(tvtimers) | Window.IsVisible(tvtimerrules) | Window.IsVisible(tvsearch)] + 
									![
										[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
										[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
										[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
										[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] |
										[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | 
										[Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | 
										[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] |
										[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]
									]
								] | Control.IsVisible(500) | Control.IsVisible(501) | 
								 Window.IsVisible(1100) | 
								 [[Window.IsVisible(Home) | Window.IsVisible(1121) | !$EXP[isContent]] + 
										[String.IsEqual(Skin.String(HomeArtworkChoice),1)]
								 ] |
								 [[Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56)] + 
										[[Container.Content(movies) + String.IsEqual(Skin.String(ArtworkChoice.movies),1)] | 
										 [Container.Content(tvshows) + String.IsEqual(Skin.String(ArtworkChoice.tvshows),1)] | 
										 [Container.Content(seasons) + String.IsEqual(Skin.String(ArtworkChoice.seasons),1)] | 
										 [Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkChoice.episodes),1)]
										]
								 ] |
								 [!Window.IsVisible(Home) + !Window.IsVisible(1121) + 
										[[Container.Content(movies) + String.IsEqual(Skin.String(ArtworkChoice.movies),1)] | 
										 [Container.Content(tvshows) + String.IsEqual(Skin.String(ArtworkChoice.tvshows),1)] | 
										 [Container.Content(seasons) + String.IsEqual(Skin.String(ArtworkChoice.seasons),1)] | 
										 [Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkChoice.episodes),1)]
										]
								 ]
								]
						]
				]
				</visible> -->
				<visible>
					!Skin.HasSetting(Enable.BackgroundBlur) + 
					[
						[Control.IsVisible(50) + 
							![Window.IsVisible(tvchannels) | Window.IsVisible(tvguide) | Window.IsVisible(tvrecordings) | Window.IsVisible(tvtimers) | Window.IsVisible(tvtimerrules) | Window.IsVisible(tvsearch)] + 
							![
								[Container.Content(movies) + String.IsEqual(Skin.String(ListArtworkChoice.movies),2)] | 
								[Container.Content(tvshows) + String.IsEqual(Skin.String(ListArtworkChoice.tvshows),2)] | 
								[Container.Content(seasons) + String.IsEqual(Skin.String(ListArtworkChoice.seasons),2)] | 
								[Container.Content(episodes) + String.IsEqual(Skin.String(ListArtworkChoice.episodes),2)] |
								[Container.Content(addons) + String.IsEqual(Skin.String(ListArtworkChoice.addons),2)] | 
								[Container.Content(files) + String.IsEqual(Skin.String(ListArtworkChoice.files),2)] | 
								[Container.Content(favourites) + String.IsEqual(Skin.String(ListArtworkChoice.favourites),2)] |
								[Container.Content() + String.IsEqual(Skin.String(ListArtworkChoice.),2)]
								]
							] |
							[!Control.IsVisible(50) + 
								[
									Control.IsVisible(400) |
									Control.IsVisible(500) | 
									Control.IsVisible(501) | 
									Window.IsVisible(1100) | 
									[[Window.IsVisible(Home) | Window.IsVisible(1121) | !$EXP[isContent]] + 
										[String.IsEqual(Skin.String(HomeArtworkChoice),1)]
									] |
									[[Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56)] + 
										[[Container.Content(movies) + String.IsEqual(Skin.String(ArtworkChoice.movies),1)] | 
										[Container.Content(tvshows) + String.IsEqual(Skin.String(ArtworkChoice.tvshows),1)] | 
										[Container.Content(seasons) + String.IsEqual(Skin.String(ArtworkChoice.seasons),1)] | 
										[Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkChoice.episodes),1)]
										]
									] |
									[!Window.IsVisible(Home) + !Window.IsVisible(1121) + 
										[[Container.Content(movies) + String.IsEqual(Skin.String(ArtworkChoice.movies),1)] | 
										[Container.Content(tvshows) + String.IsEqual(Skin.String(ArtworkChoice.tvshows),1)] | 
										[Container.Content(seasons) + String.IsEqual(Skin.String(ArtworkChoice.seasons),1)] | 
										[Container.Content(episodes) + String.IsEqual(Skin.String(ArtworkChoice.episodes),1)]
										]
									]
								]
							] |
							[!Control.IsVisible(50) + !Control.IsVisible(54) + !Control.IsVisible(55) + !Control.IsVisible(56) + 
							!Window.IsVisible(Home) + !Window.IsVisible(1121) + !$EXP[isContent]]
					]
			</visible>
			



					
			</control>
			<!-- <control type="image">
				<visible>
					!Skin.HasSetting(Enable.BackgroundBlur) + 
        [
            [Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)] + 
            String.IsEmpty(Listitem.Art(fanart)) + 
            String.IsEmpty(Window(home).Property(nimbus_fanart_art)) + 
            !ControlGroup(15000).HasFocus + 
            ![String.IsEqual(Skin.String(HomeArtworkChoice),1)]
        ]
			</visible>
				<include>NetflixScreenDimensions</include>
				<include>MediaMenuAnimations</include>
				<depth>DepthBackground</depth>
				<aspectratio>scale</aspectratio>
				<texture diffuse="overlays/netflixfanartdiffuse.png" colordiffuse="primary_background">special://skin/extras/backgrounds/primary.jpg</texture>
				<animation effect="fade" time="400">VisibleChange</animation>
			</control> -->
		</control>
	</include>

	<include name="FullScreenDimensions">
		<left>0</left>
		<top>0</top>
		<width>101%</width>
		<height>101%</height>
	</include>

	<include name="NetflixScreenDimensions">
		<right>-3</right>
		<top>-3</top>
		<width>1300</width>
		<height>731</height>
	</include>

	<include name="NetflixScreenVideoDimensions">
		<right>-3</right>
		<top>-72</top>
		<width>1410</width>
		<height>793</height>
	</include>

	<include name="BigLandscapeScreenDimensions">
		<right>50</right>
		<top>50</top>
		<width>930</width>
		<height>523</height>
	</include>

	<include name="PVRBackground">
		<control type="image">
			<include>NetflixScreenDimensions</include>
			<include>MediaMenuAnimations</include>
			<aspectratio>stretch</aspectratio>
			<fadetime>500</fadetime>
			<texture background="true" diffuse="overlays/netflixfanartdiffuse.png">$VAR[NimbusCustomBackgroundImage]</texture>
			<visible>!Player.HasMedia + String.IsEqual(Skin.String(HomeArtworkChoice),0)</visible>
		</control>
		<control type="image">
			<include>BigLandscapeScreenDimensions</include>
			<include>MediaMenuAnimations</include>
			<fadetime>500</fadetime>
			<texture colordiffuse="artwork_dim" diffuse="masks/giant-landscape.png" background="true">$VAR[NimbusCustomBackgroundImage]</texture>
			<bordersize>1</bordersize>
			<aspectratio scalediffuse="false">scale</aspectratio>
			<bordertexture colordiffuse="$VAR[BorderColorVar]" border="17" infill="false">masks/giant-border.png</bordertexture>
			<visible>!Player.HasMedia + String.IsEqual(Skin.String(HomeArtworkChoice),1)</visible>
		</control>
	</include>

	<include name="DefaultBackground">
		<definition>
			<control type="group">
				<visible>Player.HasVideo</visible>
				<control type="videowindow">
					<depth>DepthBackground</depth>
					<include>NetflixScreenVideoDimensions</include>
					<visible>!Slideshow.IsActive</visible>
					<visible>Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56) | Window.IsVisible(tvchannels) | Window.IsVisible(tvguide) | Window.IsVisible(tvrecordings) | Window.IsVisible(tvtimers) | Window.IsVisible(tvtimerrules) | Window.IsVisible(tvsearch)</visible>
				</control>
				<control type="videowindow">
					<depth>DepthBackground</depth>
					<include>FullScreenDimensions</include>
					<visible>!Slideshow.IsActive</visible>
					<visible>![Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56) | Window.IsVisible(tvchannels) | Window.IsVisible(tvguide) | Window.IsVisible(tvrecordings) | Window.IsVisible(tvtimers) | Window.IsVisible(tvtimerrules) | Window.IsVisible(tvsearch)]</visible>
				</control>
				<control type="image">
					<right>-3</right>
					<top>-3</top>
					<width>1410</width>
					<height>730</height>
					<texture colordiffuse="black">overlays/netflixtrailerdiffuse.png</texture>
					<visible>Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56) | Window.IsVisible(tvchannels) | Window.IsVisible(tvguide) | Window.IsVisible(tvrecordings) | Window.IsVisible(tvtimers) | Window.IsVisible(tvtimerrules) | Window.IsVisible(tvsearch)</visible>
				</control>
				<control type="image">
					<include>FullScreenDimensions</include>
					<texture colordiffuse="99000000">colors/white.png</texture>
					<visible>![Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(56) | Window.IsVisible(tvchannels) | Window.IsVisible(tvguide) | Window.IsVisible(tvrecordings) | Window.IsVisible(tvtimers) | Window.IsVisible(tvtimerrules) | Window.IsVisible(tvsearch)]</visible>
				</control>
				<control type="visualisation">
					<include>FullScreenDimensions</include>
					<visible>!Slideshow.IsActive</visible>
					<visible>Player.HasAudio + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia)) + Visualisation.Enabled</visible>
				</control>
			</control>
			<control type="group">
				<include>FullScreenDimensions</include>
				<animation effect="zoom" center="auto" end="102,102" time="0" condition="Integer.IsGreater(System.StereoscopicMode,0)">conditional</animation>
				<control type="group">
					<!-- <animation effect="fade" start="100" end="bg_alpha" time="0" condition="!Control.IsVisible(31111)">Conditional</animation> -->
					<animation effect="fade" start="0" end="100" time="300" condition="Window.Previous(fullscreenvideo) | Window.Previous(FullscreenGame) | Window.Previous(startup)">WindowOpen</animation>
					<include>ColoredBackgroundImages</include>
				</control>
				<!-- <control type="group" id="31111">
					<visible>[Window.IsVisible(Home) | Window.IsVisible(1121) | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)] + [![Player.HasVideo | [Player.HasAudio + Visualisation.Enabled + !String.IsEmpty(Visualisation.Name)]] | !String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]</visible>
					<depth>DepthBackground</depth>
					<animation effect="fade" start="0" end="100" time="500">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="500">WindowClose</animation>
					<animation effect="fade" time="400">VisibleChange</animation>
					<control type="image" id="32111">
						<right>-3</right>
						<top>-3</top>
						<width>1300</width>
						<height>731</height>
						<aspectratio>stretch</aspectratio>
						<fadetime>500</fadetime>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="artwork_dim" diffuse="overlays/netflixfanartdiffuse.png">$VAR[MediaFanartVar]</texture>
						<visible>!Control.IsVisible(502) | $EXP[infodialog_active]</visible>
					</control>
					
					<control type="image">
						<left>-3</left>
						<top>0</top>
						<right>1193</right>
						<height>100%</height>
						<aspectratio aligny="center">scale</aspectratio>
						<fadetime>400</fadetime>
						<include>OpenClose_Left</include>
						<animation effect="fade" time="400">VisibleChange</animation>
						<texture background="true" colordiffuse="$VAR[Fanartosd_lightnessVar]">$VAR[PosterVar]</texture>
						<visible>!Control.IsVisible(32111)</visible>
					</control>
				</control> -->
			</control>
		</definition>
	</include>

	<include name="BottomBar">
		<param name="info_visible">False</param>
		<definition>
			<control type="group">
				<animation effect="slide" end="0,112" time="300" tween="sine" easing="inout" condition="$EXP[infodialog_active]">conditional</animation>
				<depth>DepthBars</depth>
				<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(visualisation) | Window.Next(screencalibration)">WindowClose</animation>
				<animation effect="fade" start="0" end="100" time="300" condition="Window.Previous(fullscreenvideo) | Window.Previous(startup) | Window.Previous(visualisation)">WindowOpen</animation>
				<visible>![Control.IsVisible(50) | Control.IsVisible(56)]</visible>
				<bottom>0</bottom>
				<control type="image">
					<left>0</left>
					<bottom>0</bottom>
					<width>110%</width>
					<height>123</height>
					<texture flipy="true">frame/InfoBar.png</texture>
				</control>
				<control type="group">
					<visible>$PARAM[info_visible]</visible>
					<visible>!System.HasActiveModalDialog</visible>
					<visible>!Skin.HasSetting(touchmode)</visible>
					<animation effect="fade" time="400">VisibleChange</animation>
					<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
					<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
					<!-- <control type="button">
						<bottom>20</bottom>
						<left>12</left>
						<width>36</width>
						<height>36</height>
						<animation effect="rotate" end="-90" center="auto" time="200" reversible="true" condition="Control.IsVisible(51) | Control.IsVisible(53)">Conditional</animation>
						<texturefocus colordiffuse="button_focus">frame/menu-nofo.png</texturefocus>
						<texturenofocus colordiffuse="unfocused_text">frame/menu-nofo.png</texturenofocus>
						<animation effect="fade" time="200">VisibleChange</animation>
						<onclick>SetFocus(9000)</onclick>
						<visible>!Control.IsVisible(6160)</visible>
					</control> -->
					<control type="button" id="6160">
						<bottom>20</bottom>
						<left>12</left>
						<width>36</width>
						<height>36</height>
						<texturefocus colordiffuse="button_focus">icons/menu.png</texturefocus>
						<texturenofocus colordiffuse="unfocused_text">icons/menu.png</texturenofocus>
						<animation effect="fade" time="200">VisibleChange</animation>
						<onclick>SetFocus(9000)</onclick>
						<visible>Window.IsActive(MyPVRGuide.xml)</visible>
					</control>
					<!-- <control type="button">
						<bottom>16</bottom>
						<left>64</left>
						<width>300</width>
						<height>44</height>
						<shadowcolor>text_shadow</shadowcolor>
						<label>$LOCALIZE[33063]</label>
						<onclick>SetFocus(9000)</onclick>
						<texturefocus />
						<texturenofocus />
					</control> -->
				</control>
				<include>TouchButtons</include>
			</control>
		</definition>
	</include>

	<include name="BottomBarTwoListInfo">
		<control type="group">
			<animation effect="fade" start="0" end="100" time="400">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300">WindowClose</animation>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<align>right</align>
				<bottom>0</bottom>
				<height>65</height>
				<itemgap>10</itemgap>
				<right>24</right>
				<width>1200</width>
				<control type="label">
					<width>auto</width>
					<height>48</height>
					<aligny>center</aligny>
					<align>right</align>
					<shadowcolor>text_shadow</shadowcolor>
					<label>$INFO[Container($PARAM[right_container_id]).CurrentItem,, / ]$INFO[Container($PARAM[right_container_id]).NumItems]</label>
				</control>
				<control type="image">
					<width>54</width>
					<height>44</height>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="button_focus">frame/item-count.png</texture>
				</control>
			</control>
			<control type="grouplist">
				<orientation>horizontal</orientation>
				<bottom>0</bottom>
				<height>65</height>
				<left>24</left>
				<width>1200</width>
				<itemgap>10</itemgap>
				<control type="image">
					<width>54</width>
					<height>44</height>
					<aspectratio>keep</aspectratio>
					<texture colordiffuse="button_focus">frame/item-count.png</texture>
				</control>
				<control type="label">
					<width>auto</width>
					<height>48</height>
					<aligny>center</aligny>
					<align>right</align>
					<shadowcolor>text_shadow</shadowcolor>
					<label>$INFO[Container($PARAM[left_container_id]).CurrentItem,, / ]$INFO[Container($PARAM[left_container_id]).NumItems]</label>
				</control>
			</control>
		</control>
	</include>

	<include name="FocusableProgressBar">
		<param name="width">100%</param>
		<param name="onunfocus_id">200</param>
		<definition>
			<control type="progress">
				<animation effect="fade" end="0" time="200">WindowClose</animation>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>15</height>
				<info>Player.ProgressCache</info>
				<texturebg border="3" colordiffuse="00FFFFFF">colors/white50.png</texturebg>
				<midtexture>colors/white50.png</midtexture>
				<animation effect="fade" start="100" end="80" time="0" condition="true">Conditional</animation>
			</control>
			<control type="progress" id="23">
				<animation effect="fade" end="0" time="200">WindowClose</animation>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>15</height>
				<info>Player.Progress</info>
				<texturebg border="3" colordiffuse="80FFFFFF">colors/white50.png</texturebg>
				<midtexture colordiffuse="button_focus">colors/white.png</midtexture>
			</control>
			<control type="button" id="87">
				<include>HiddenObject</include>
				<onup>$PARAM[onunfocus_id]</onup>
				<onunfocus condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onunfocus>
				<ondown>$PARAM[onunfocus_id]</ondown>
				<onright condition="!Player.Forwarding32x">PlayerControl(Forward)</onright>
				<onleft condition="!Player.Rewinding32x">PlayerControl(Rewind)</onleft>
				<visible>Player.SeekEnabled</visible>
				<onclick condition="Player.Forwarding | Player.Rewinding">PlayerControl(Play)</onclick>
			</control>
			<control type="slider">
				<top>-5</top>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>25</height>
				<texturesliderbar colordiffuse="00FFFFFF">osd/progress/nub_leftright.png</texturesliderbar>
				<textureslidernib>osd/progress/nub_leftright.png</textureslidernib>
				<textureslidernibfocus colordiffuse="button_focus">osd/progress/nub_leftright.png</textureslidernibfocus>
				<info>Player.Progress</info>
				<action>seek</action>
				<visible>!Control.HasFocus(87) + Player.SeekEnabled</visible>
			</control>
			<control type="slider">
				<top>-5</top>
				<left>0</left>
				<width>$PARAM[width]</width>
				<height>25</height>
				<texturesliderbar colordiffuse="00FFFFFF">osd/progress/nub_leftright.png</texturesliderbar>
				<textureslidernib colordiffuse="button_focus">osd/progress/nub_leftright.png</textureslidernib>
				<textureslidernibfocus colordiffuse="button_focus">osd/progress/nub_leftright.png</textureslidernibfocus>
				<info>Player.Progress</info>
				<action>seek</action>
				<visible>Control.HasFocus(87) + Player.SeekEnabled</visible>
			</control>
		</definition>
	</include>

	<include name="MenuContentPanel">
    <param name="width">500</param>
    <param name="left">-40</param>
    <param name="right"></param>
    <param name="top">-40</param>
    <param name="height">1160</param>
    <param name="flipx">false</param>
    <definition>
			<!-- Content Panel Background -->
			<control type="image">
				<texture flipx="$PARAM[flipx]" colordiffuse="$VAR[MainMenuDiffuse]">masks/mediapanel.png</texture>
				<bordersize>40</bordersize>
				<width>$PARAM[width]</width>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<top>$PARAM[top]</top>
				<height>$PARAM[height]</height>
			</control>
    </definition>
	</include>

	<include name="ContentPanel">
		<param name="width">500</param>
		<param name="left">-40</param>
		<param name="right"></param>
		<param name="top">-10%</param>
		<param name="height">120%</param>
		<param name="flipx">false</param>
		<definition>
			<!-- Content Panel Background -->
			<control type="image">
				<texture flipx="$PARAM[flipx]" colordiffuse="black">lists/contentpanel-fade.png</texture>
				<!-- <bordertexture border="21" infill="false">overlays/shadow.png</bordertexture> -->
				<bordersize>20</bordersize>
				<width>$PARAM[width]</width>
				<left>$PARAM[left]</left>
				<right>$PARAM[right]</right>
				<top>$PARAM[top]</top>
				<height>$PARAM[height]</height>
				<visible>VideoPlayer.Content(LiveTV)</visible>
			</control>
		</definition>
	</include>

	<include name="TouchButtons">
		<control type="grouplist" id="700">
			<orientation>horizontal</orientation>
			<visible>Skin.HasSetting(touchmode)</visible>
			<visible>!Window.IsActive(home) + !Window.IsActive(filemanager)</visible>
			<animation effect="fade" start="0" end="100" time="400" condition="Window.Previous(home)">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(home)">WindowClose</animation>
			<itemgap>0</itemgap>
			<left>-8</left>
			<width>480</width>
			<height>110</height>
			<bottom>0</bottom>
			<onup>noop</onup>
			<ondown>9000</ondown>
			<onright>2000</onright>
			<align>justify</align>
			<usecontrolcoords>true</usecontrolcoords>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="SetFocus(9000)" />
				<param name="icon" value="icons/settings.png" />
				<param name="label" value="$LOCALIZE[10004]" />
				<param name="visible" value="Window.IsMedia" />
			</include>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="ActivateWindow(shutdownmenu)" />
				<param name="icon" value="icons/power.png" />
				<param name="label" value="$LOCALIZE[33060]" />
				<param name="visible" value="!Window.IsMedia" />
			</include>
			<control type="group">
				<width>120</width>
				<control type="button">
					<top>0</top>
					<width>120</width>
					<height>120</height>
					<label></label>
					<onclick>ActivateWindow(1103)</onclick>
					<texturefocus colordiffuse="button_focus">buttons/roundbutton-fo.png</texturefocus>
					<texturenofocus />
				</control>
				<control type="image">
					<left>34</left>
					<top>34</top>
					<width>52</width>
					<height>52</height>
					<texture colordiffuse="grey">$VAR[VolumeIconVar]</texture>
				</control>
			</control>
			<include content="IconButton">
				<param name="control_id" value="" />
				<param name="onclick" value="ActivateWindow(favourites)" />
				<param name="icon" value="icons/favourites.png" />
				<param name="label" value="$LOCALIZE[10134]" />
			</include>
		</control>
	</include>

	<include name="TouchBackButton">
		<control type="radiobutton" id="799">
			<left>-10</left>
			<top>-10</top>
			<width>120</width>
			<height>120</height>
			<align>center</align>
			<aligny>center</aligny>
			<onclick>Action(Back)</onclick>
			<animation effect="fade" start="0" end="100" time="400" condition="Window.Previous(home)">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="300" condition="Window.Next(home)">WindowClose</animation>
			<texturefocus colordiffuse="button_focus">buttons/roundbutton-fo.png</texturefocus>
			<texturenofocus />
			<radioposx>30</radioposx>
			<radiowidth>60</radiowidth>
			<radioheight>60</radioheight>
			<textureradioonfocus>icons/back.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="grey">icons/back.png</textureradioonnofocus>
			<textureradioofffocus>icons/back.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="grey">icons/back.png</textureradiooffnofocus>
		</control>
	</include>

	<include name="TouchBackOSDButton">
		<control type="radiobutton" id="799">
			<left>-10</left>
			<top>-10</top>
			<width>120</width>
			<height>120</height>
			<align>center</align>
			<aligny>center</aligny>
			<onclick>Dialog.Close(all,true)</onclick>
			<onclick>Action(FullScreen)</onclick>
			<texturefocus colordiffuse="button_focus">buttons/roundbutton-fo.png</texturefocus>
			<texturenofocus />
			<radioposx>30</radioposx>
			<radiowidth>60</radiowidth>
			<radioheight>60</radioheight>
			<textureradioonfocus>icons/back.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="grey">icons/back.png</textureradioonnofocus>
			<textureradioofffocus>icons/back.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="grey">icons/back.png</textureradiooffnofocus>
			<include>Animation_TopSlide</include>
		</control>
	</include>

	<include name="TouchBackSlideshowButton">
		<control type="radiobutton" id="13">
			<left>-10</left>
			<top>-10</top>
			<width>120</width>
			<height>120</height>
			<align>center</align>
			<aligny>center</aligny>
			<onfocus>Action(Back)</onfocus>
			<texturefocus colordiffuse="button_focus">buttons/roundbutton-fo.png</texturefocus>
			<texturenofocus />
			<radioposx>30</radioposx>
			<radiowidth>60</radiowidth>
			<radioheight>60</radioheight>
			<textureradioonfocus>icons/back.png</textureradioonfocus>
			<textureradioonnofocus colordiffuse="grey">icons/back.png</textureradioonnofocus>
			<textureradioofffocus>icons/back.png</textureradioofffocus>
			<textureradiooffnofocus colordiffuse="grey">icons/back.png</textureradiooffnofocus>
			<visible>!Window.IsVisible(PictureInfo)</visible>
		</control>
	</include>

	<include name="SettingsPanel">
		<itemlayout height="230" width="370">
			<control type="image">
				<top>37</top>
				<left>25</left>
				<!-- 410 -->
				<width>338</width>
				<!-- 270 -->
				<height>198</height>
				<texture colordiffuse="dialog_bg">masks/landscape.png</texture>
				<bordertexture colordiffuse="FF181818" border="10" infill="false">masks/landscape-border.png</bordertexture>
				<!-- <bordertexture colordiffuse="white" border="20" infill="false">masks/poster-border.png</bordertexture> -->
				<bordersize>2</bordersize>
			</control>
			<control type="image">
				<centerleft>54%</centerleft>
				<top>45</top>
				<width>210</width>
				<height>140</height>
				<texture colordiffuse="unfocused_text">$INFO[ListItem.Icon]</texture>
				<align>center</align>
				<aspectratio>scale</aspectratio>
			</control>
			<control type="label">
				<left>25</left>
				<top>175</top>
				<width>350</width>
				<height>400</height>
				<label>$INFO[ListItem.Label]</label>
				<font>font27</font>
				<textcolor>unfocused_text</textcolor>
				<align>center</align>
			</control>
		</itemlayout>
		<focusedlayout height="230" width="370" infoupdate="300">
			<control type="group">
				<depth>DepthContentPopout</depth>
				<control type="image">
					<top>37</top>
					<left>25</left>
					<width>337</width>
					<height>197</height>
					<texture colordiffuse="$VAR[FocusColorTheme]">masks/landscape-glow.png</texture>
					<bordersize>-25</bordersize>
					<include>Animation_FocusTextureFade</include>
					<include content="GlowPulse">
						<param name="pos_x" value="205.5"/>
						<param name="pos_y" value="135.5"/>
					</include>
				</control>
				<control type="image">
					<top>37</top>
					<left>25</left>
					<width>338</width>
					<height>198</height>
					<texture colordiffuse="dialog_bg">masks/landscape.png</texture>
					<bordersize>1</bordersize>
				</control>
				<control type="image">
					<centerleft>54%</centerleft>
					<top>45</top>
					<width>210</width>
					<height>140</height>
					<texture colordiffuse="unfocused_text">$INFO[ListItem.Icon]</texture>
					<align>center</align>
					<aspectratio>scale</aspectratio>
				</control>
				<control type="label">
					<left>25</left>
					<top>175</top>
					<width>350</width>
					<height>400</height>
					<label>$INFO[ListItem.Label]</label>
					<font>font27</font>
					<textcolor>unfocused_text</textcolor>
					<align>center</align>
				</control>
			</control>
		</focusedlayout>
	</include>

	<!-- MY INCLUDES -->

	<include name="osd_darkenBG">
		<control type="image">
			<visible>!ControlGroup(2000).HasFocus</visible>
			<texture colordiffuse="FF000000">colors/white.png</texture>
			<animation type="Conditional" condition="!ControlGroup(2000).HasFocus" reversible="true">
				<effect type="fade" start="0" end="33" time="300" tween="linear" />
			</animation>
		</control>
	</include>

	<!-- <include name="FlixFanart">
		<control type="multiimage">
			<include>NetflixScreenDimensions</include>
			<aspectratio>stretch</aspectratio>
			<fadetime>500</fadetime>
			<animation effect="fade" start="0" end="100" time="500">WindowOpen</animation>
			<animation effect="fade" start="100" end="0" time="500">WindowClose</animation>
			<animation effect="fade" time="400">VisibleChange</animation>
			<imagepath background="true" colordiffuse="artwork_dim" diffuse="overlays/netflixfanartdiffuse.png">$VAR[MediaFanartVar]</imagepath>
			<visible>!Player.HasMedia + !String.IsEmpty(ListItem.Art(fanart)) + [Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(widget_scroll_timer),1) + [[Window.IsVisible(Home) | Window.IsVisible(1121)] + ![Control.HasFocus(9000) | Control.HasFocus(700) | Control.HasFocus(733)]]] | [Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)] + [![Player.HasVideo | [Player.HasAudio + Visualisation.Enabled + !String.IsEmpty(Visualisation.Name)]] | !String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]</visible>
			<visible>[![Player.HasVideo | [Player.HasAudio + Visualisation.Enabled + !String.IsEmpty(Visualisation.Name)]] | !String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia))]</visible>
			<visible>[[Window.IsVisible(Home) | Window.IsVisible(1121)] + Integer.IsGreaterOrEqual(Skin.TimerElapsedSecs(widget_scroll_timer),1)] | Control.IsVisible(54) | Control.IsVisible(55) | Control.IsVisible(50) | Control.IsVisible(56)</visible>
		</control>
	</include> -->
	
	<include name="MiniMenu700Labels">
		<control type="label">
			<visible>Control.HasFocus(700)</visible>
			<include>MiniMenuAnimations</include>
			<top>$PARAM[top]</top>
			<left>90</left>
			<width>820</width>
			<aligny>center</aligny>
			<height>98</height>
			<font>font32_title</font>
			<label>$VAR[MiniMenuCase700Var]</label>
			<textcolor>$VAR[FocusColorTheme]</textcolor>
		</control>
	</include>

	<include name="MiniMenu733Labels">
		<control type="label">
			<visible>Control.HasFocus(733)</visible>
			<include>MiniMenuAnimations</include>
			<top>$PARAM[top]</top>
			<left>90</left>
			<width>820</width>
			<aligny>center</aligny>
			<height>98</height>
			<font>font32_title</font>
			<label>$VAR[MiniMenuCase733Var]</label>
			<textcolor>$VAR[FocusColorTheme]</textcolor>
		</control>
	</include>

	<include name="FlixInfoIcon">
		<control type="togglebutton">
			<left>50</left>
			<width>auto</width>
			<top>56</top>
			<height>49</height>
			<align>left</align>
			<aligny>center</aligny>
			<textoffsetx>14</textoffsetx>
			<!-- <textoffsety>9.1</textoffsety> -->
			<font>FlixPanelIcon</font>
			<textcolor>unfocused_text</textcolor>
			<texturenofocus border="13" colordiffuse="$VAR[FlixIconColor]">masks/flixicon-filled.png</texturenofocus>
			<label>[UPPERCASE]$PARAM[flixlabel][/UPPERCASE]</label>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>

	<include name="DO_FlixInfoIcon">
		<control type="togglebutton">
			<left>50</left>
			<width>auto</width>
			<top>56</top>
			<height>54</height>
			<align>center</align>
			<!-- <aligny>center</aligny> -->
			<textoffsetx>16</textoffsetx>
			<textoffsety>10.3</textoffsety>
			<font>PlayerCodecs</font>
			<textcolor>unfocused_text</textcolor>
			<texturenofocus border="13" colordiffuse="$VAR[FlixIconColor]">masks/flixicon-filled.png</texturenofocus>
			<label>[UPPERCASE][LIGHT]$PARAM[flixlabel][/LIGHT][/UPPERCASE]</label>
			<visible>$PARAM[visible]</visible>
		</control>
	</include>

	<include name="HomeTrailerControl">
    <control type="button">
			<visible>false</visible>
			<onfocus condition="!Player.HasMedia + String.IsEqual(Skin.String(trailerSetting),2) + String.IsEmpty(Skin.String(TrailerPlaying))">Skin.TimerStart(autoplay_trailer_timer)</onfocus>
			<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
			<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
    </control>
	</include>

	<include name="VideoTrailerControl">
    <control type="button">
			<visible>false</visible>
			<onfocus condition="String.IsEqual(Skin.String(trailerSetting),2) + String.IsEmpty(Window(Videos).Property(PlayingBackgroundMedia)) + !VideoPlayer.Content(livetv)">Skin.TimerStart(autoplay_trailer_timer)</onfocus>
			<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
			<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
    </control>
	</include>

	<!-- <include name="TrailerControl">
    <control type="button">
			<visible>false</visible>
			<onfocus condition="String.IsEqual(Skin.String(trailerSetting),2) + [Window.IsVisible(Home) | Window.IsVisible(1121)] + !Player.HasMedia + String.IsEmpty(Skin.String(TrailerPlaying))">Skin.TimerStart(autoplay_trailer_timer)</onfocus>
			<onfocus condition="String.IsEqual(Skin.String(trailerSetting),2) + ![Window.IsVisible(Home) | Window.IsVisible(1121)]">Skin.TimerStart(autoplay_trailer_timer)</onfocus>
			<onunfocus condition="Player.HasMedia + !String.IsEmpty(Skin.String(TrailerPlaying))">Stop</onunfocus>
			<onunfocus condition="!String.IsEmpty(Skin.String(TrailerPlaying))">Skin.Reset(TrailerPlaying)</onunfocus>
    </control>
	</include> -->

	<include name="WallTimer">
		<control type="button">
			<visible>false</visible>
			<onfocus>Skin.TimerStart(wall_scroll_timer)</onfocus>
		</control>
	</include>

	<include name="PlaybackTimer">
		<control type="button">
			<visible>false</visible>
			<onfocus>Skin.TimerStart(end_playback_timer)</onfocus>
		</control>
	</include>

	<include name="SetLandscapeArtworkProperties">
		<control type="button">
			<visible>false</visible>
			<onfocus>SetProperty(LandscapeWidgetFocused,true,Home)</onfocus>
		</control>
	</include>
	
	<include name="ClearLandscapeProperties">
		<control type="button">
			<visible>false</visible>
			<onfocus>ClearProperty(LandscapeWidgetFocused,Home)</onfocus>
		</control>
	</include>

</includes>
